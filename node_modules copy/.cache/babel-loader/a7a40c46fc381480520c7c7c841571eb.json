{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frollo\\\\Desktop\\\\DevNet\\\\JavaScript\\\\React\\\\py_react\\\\src\\\\components\\\\LiveLog.js\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport myLogs from \"./debug.txt\";\nimport \"../styles/LiveLog.css\";\nexport default function LiveLog() {\n  const [trigger, settrigger] = useState(0);\n  const [modal, setModal] = useState(false);\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n\n    async function APICallLog() {\n      try {\n        fetch(myLogs).then(response => {\n          return response.text();\n        }).then(data => {\n          console.log(data);\n          document.getElementById(\"log\").innerHTML = data;\n        });\n      } catch (err) {\n        if (err) {\n          console.log(err);\n        }\n      }\n    }\n\n    APICallLog();\n  }, [trigger]);\n\n  const toggle = () => {\n    settrigger(trigger + 1);\n    setModal(!modal);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggle,\n    class: \"btn btn-success btn-block\",\n    \"data-dismiss\": \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"OK\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"myModal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"modal-dialog modal-confirm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"modal-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"icon-box-login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"\\uE876\")), /*#__PURE__*/React.createElement(\"h4\", {\n    class: \"modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"Awesome!\")), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    class: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, \"You have successefully Logged-in\")), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"modal-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    // onClick={handleLoginSuccess}\n    class: \"btn btn-success btn-block\",\n    \"data-dismiss\": \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"OK\"))))));\n}","map":{"version":3,"sources":["C:/Users/frollo/Desktop/DevNet/JavaScript/React/py_react/src/components/LiveLog.js"],"names":["React","useEffect","useState","useRef","Button","Modal","ModalHeader","ModalBody","myLogs","LiveLog","trigger","settrigger","modal","setModal","isFirstRun","current","APICallLog","fetch","then","response","text","data","console","log","document","getElementById","innerHTML","err","toggle"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody } from \"reactstrap\";\r\nimport myLogs from \"./debug.txt\";\r\nimport \"../styles/LiveLog.css\";\r\n\r\nexport default function LiveLog() {\r\n  const [trigger, settrigger] = useState(0);\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const isFirstRun = useRef(true);\r\n  useEffect(() => {\r\n    if (isFirstRun.current) {\r\n      isFirstRun.current = false;\r\n      return;\r\n    }\r\n    async function APICallLog() {\r\n      try {\r\n        fetch(myLogs)\r\n          .then((response) => {\r\n            return response.text();\r\n          })\r\n          .then((data) => {\r\n            console.log(data);\r\n            document.getElementById(\"log\").innerHTML = data;\r\n          });\r\n      } catch (err) {\r\n        if (err) {\r\n          console.log(err);\r\n        }\r\n      }\r\n    }\r\n    APICallLog();\r\n  }, [trigger]);\r\n\r\n  const toggle = () => {\r\n    settrigger(trigger + 1);\r\n    setModal(!modal);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={toggle}\r\n        class=\"btn btn-success btn-block\"\r\n        data-dismiss=\"modal\"\r\n      >\r\n        OK\r\n      </button>\r\n      <div id=\"myModal\">\r\n        <div class=\"modal-dialog modal-confirm\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <div class=\"icon-box-login\">\r\n                <i class=\"material-icons\">&#xE876;</i>\r\n              </div>\r\n              <h4 class=\"modal-title\">Awesome!</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <p class=\"text-center\">You have successefully Logged-in</p>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button\r\n                // onClick={handleLoginSuccess}\r\n                class=\"btn btn-success btn-block\"\r\n                data-dismiss=\"modal\"\r\n              >\r\n                OK\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}