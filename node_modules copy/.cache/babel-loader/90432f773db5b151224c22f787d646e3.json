{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frollo\\\\Desktop\\\\DevNet\\\\JavaScript\\\\React\\\\py_react\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Template from \"./components/Template\";\nimport LoginAPI from \"./components/LoginAPI\";\nimport Dashboard from \"./components/Dashboard\";\nconst MainContext = React.createContext(null);\n\nfunction App() {\n  const InitialKey = \"12345\";\n  const [apiKey, setapiKey] = useState(InitialKey); // const [apiKey, setapiKey] = useState({\n  //   \"X-Cisco-Meraki-API-Key\": `${InitialKey}`,\n  // });\n\n  const [organizationList, setorganizationList] = useState(\"Meraki\");\n  const [networkList, setnetworkList] = useState([]);\n  console.log(\"App -> networkList\", networkList[0].timeZone);\n  const [organization, setorganization] = useState(\"Set Organization\");\n  const [organizationID, setorganizationID] = useState(0);\n  const [timeZone, settimeZone] = useState(0);\n  console.log(\"App -> timeZone\", timeZone);\n  const [network, setnetwork] = useState(0);\n  const [Name, setName] = useState(\"\");\n  const [loginEmail, setloginEmail] = useState(\"\");\n  const [inputKey, setinputKey] = useState();\n  const [inputConfKey, setinputConfKey] = useState();\n  const [isLoggedIn, setisLoggedIn] = useState(false);\n  const [switchLoginAPI, setswitchLoginAPI] = useState(true);\n  const [switchDashboard, setswitchDashboard] = useState(false);\n  const [switchLoggedIn, setswitchLoggedIn] = useState(false);\n  const [switchLoggedout, setswitchLoggedout] = useState(false);\n  const [switchswitchChangeApiKey, setswitchswitchChangeApiKey] = useState(false);\n  const [classLogin, setclassLogin] = useState(\"active-menu\");\n  const [classDashboard, setclassDashboard] = useState(\"\");\n  const [classOrganization, setclassOrganization] = useState(\"\");\n  const [classNetwork, setclassNetwork] = useState(\"\");\n  const [logInlogOut, setlogInlogOut] = useState(\"Login\");\n  const [ulClassorg, setulClassorg] = useState(\"nav nav-second-level\");\n  const [ulClassnet, setulClassnet] = useState(\"nav nav-second-level\");\n  const APIbody = {\n    \"X-Cisco-Meraki-API-Key\": `${apiKey}`,\n    organizationId: `${organizationID}`\n  };\n  useEffect(() => {\n    const data = localStorage.getItem(\"my-token\");\n\n    if (data) {\n      setapiKey(JSON.parse(data));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"my-token\", JSON.stringify(apiKey));\n  });\n  useEffect(() => {\n    fetch(\"/organizations\", {\n      method: [\"POST\"],\n      cache: \"no-cache\",\n      headers: {\n        content_type: \"application/json\"\n      },\n      body: JSON.stringify(APIbody)\n    }).then(response => {\n      return response.json;\n    });\n    fetch(\"/organizations\").then(res => res.json()).then(organizations => {\n      setorganizationList(organizations.organizations);\n    });\n  }, [apiKey]);\n  useEffect(() => {\n    fetch(\"/networks\", {\n      method: [\"POST\"],\n      cache: \"no-cache\",\n      headers: {\n        content_type: \"application/json\"\n      },\n      body: JSON.stringify(APIbody) // body: JSON.stringify(apiKey),\n\n    }).then(response => {\n      return response.json;\n    });\n    fetch(\"/networks\").then(res => res.json()).then(network => {\n      setnetworkList(network.networks); // settimeZone(network.networks[0].timeZone);\n    });\n  }, [apiKey, organization]);\n  const dc = {\n    organizationList,\n    setorganizationList,\n    networkList,\n    setnetworkList,\n    organization,\n    setorganization,\n    organizationID,\n    setorganizationID,\n    timeZone,\n    settimeZone,\n    network,\n    setnetwork,\n    apiKey,\n    setapiKey,\n    Name,\n    setName,\n    loginEmail,\n    setloginEmail,\n    inputKey,\n    setinputKey,\n    inputConfKey,\n    setinputConfKey,\n    isLoggedIn,\n    setisLoggedIn,\n    switchLoginAPI,\n    setswitchLoginAPI,\n    switchDashboard,\n    setswitchDashboard,\n    switchLoggedIn,\n    setswitchLoggedIn,\n    switchLoggedout,\n    setswitchLoggedout,\n    classLogin,\n    setclassLogin,\n    classDashboard,\n    setclassDashboard,\n    switchswitchChangeApiKey,\n    setswitchswitchChangeApiKey,\n    logInlogOut,\n    setlogInlogOut,\n    ulClassorg,\n    setulClassorg,\n    ulClassnet,\n    setulClassnet,\n    classOrganization,\n    setclassOrganization,\n    classNetwork,\n    setclassNetwork\n  };\n  return /*#__PURE__*/React.createElement(MainContext.Provider, {\n    dc: dc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Template, {\n    dc: dc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/frollo/Desktop/DevNet/JavaScript/React/py_react/src/App.js"],"names":["React","useState","useEffect","Template","LoginAPI","Dashboard","MainContext","createContext","App","InitialKey","apiKey","setapiKey","organizationList","setorganizationList","networkList","setnetworkList","console","log","timeZone","organization","setorganization","organizationID","setorganizationID","settimeZone","network","setnetwork","Name","setName","loginEmail","setloginEmail","inputKey","setinputKey","inputConfKey","setinputConfKey","isLoggedIn","setisLoggedIn","switchLoginAPI","setswitchLoginAPI","switchDashboard","setswitchDashboard","switchLoggedIn","setswitchLoggedIn","switchLoggedout","setswitchLoggedout","switchswitchChangeApiKey","setswitchswitchChangeApiKey","classLogin","setclassLogin","classDashboard","setclassDashboard","classOrganization","setclassOrganization","classNetwork","setclassNetwork","logInlogOut","setlogInlogOut","ulClassorg","setulClassorg","ulClassnet","setulClassnet","APIbody","organizationId","data","localStorage","getItem","JSON","parse","setItem","stringify","fetch","method","cache","headers","content_type","body","then","response","json","res","organizations","networks","dc"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Template from \"./components/Template\";\nimport LoginAPI from \"./components/LoginAPI\";\nimport Dashboard from \"./components/Dashboard\";\n\nconst MainContext = React.createContext(null);\n\nfunction App() {\n  const InitialKey = \"12345\";\n  const [apiKey, setapiKey] = useState(InitialKey);\n  // const [apiKey, setapiKey] = useState({\n  //   \"X-Cisco-Meraki-API-Key\": `${InitialKey}`,\n  // });\n  const [organizationList, setorganizationList] = useState(\"Meraki\");\n  const [networkList, setnetworkList] = useState([]);\n  console.log(\"App -> networkList\", networkList[0].timeZone);\n  const [organization, setorganization] = useState(\"Set Organization\");\n  const [organizationID, setorganizationID] = useState(0);\n  const [timeZone, settimeZone] = useState(0);\n  console.log(\"App -> timeZone\", timeZone);\n  const [network, setnetwork] = useState(0);\n  const [Name, setName] = useState(\"\");\n  const [loginEmail, setloginEmail] = useState(\"\");\n  const [inputKey, setinputKey] = useState();\n  const [inputConfKey, setinputConfKey] = useState();\n  const [isLoggedIn, setisLoggedIn] = useState(false);\n  const [switchLoginAPI, setswitchLoginAPI] = useState(true);\n  const [switchDashboard, setswitchDashboard] = useState(false);\n  const [switchLoggedIn, setswitchLoggedIn] = useState(false);\n  const [switchLoggedout, setswitchLoggedout] = useState(false);\n  const [switchswitchChangeApiKey, setswitchswitchChangeApiKey] = useState(\n    false\n  );\n  const [classLogin, setclassLogin] = useState(\"active-menu\");\n  const [classDashboard, setclassDashboard] = useState(\"\");\n  const [classOrganization, setclassOrganization] = useState(\"\");\n  const [classNetwork, setclassNetwork] = useState(\"\");\n  const [logInlogOut, setlogInlogOut] = useState(\"Login\");\n  const [ulClassorg, setulClassorg] = useState(\"nav nav-second-level\");\n  const [ulClassnet, setulClassnet] = useState(\"nav nav-second-level\");\n\n  const APIbody = {\n    \"X-Cisco-Meraki-API-Key\": `${apiKey}`,\n    organizationId: `${organizationID}`,\n  };\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"my-token\");\n    if (data) {\n      setapiKey(JSON.parse(data));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"my-token\", JSON.stringify(apiKey));\n  });\n\n  useEffect(() => {\n    fetch(\"/organizations\", {\n      method: [\"POST\"],\n      cache: \"no-cache\",\n      headers: {\n        content_type: \"application/json\",\n      },\n      body: JSON.stringify(APIbody),\n    }).then((response) => {\n      return response.json;\n    });\n    fetch(\"/organizations\")\n      .then((res) => res.json())\n      .then((organizations) => {\n        setorganizationList(organizations.organizations);\n      });\n  }, [apiKey]);\n\n  useEffect(() => {\n    fetch(\"/networks\", {\n      method: [\"POST\"],\n      cache: \"no-cache\",\n      headers: {\n        content_type: \"application/json\",\n      },\n      body: JSON.stringify(APIbody),\n      // body: JSON.stringify(apiKey),\n    }).then((response) => {\n      return response.json;\n    });\n    fetch(\"/networks\")\n      .then((res) => res.json())\n      .then((network) => {\n        setnetworkList(network.networks);\n        // settimeZone(network.networks[0].timeZone);\n      });\n  }, [apiKey, organization]);\n\n  const dc = {\n    organizationList,\n    setorganizationList,\n    networkList,\n    setnetworkList,\n    organization,\n    setorganization,\n    organizationID,\n    setorganizationID,\n    timeZone,\n    settimeZone,\n    network,\n    setnetwork,\n    apiKey,\n    setapiKey,\n    Name,\n    setName,\n    loginEmail,\n    setloginEmail,\n    inputKey,\n    setinputKey,\n    inputConfKey,\n    setinputConfKey,\n    isLoggedIn,\n    setisLoggedIn,\n    switchLoginAPI,\n    setswitchLoginAPI,\n    switchDashboard,\n    setswitchDashboard,\n    switchLoggedIn,\n    setswitchLoggedIn,\n    switchLoggedout,\n    setswitchLoggedout,\n    classLogin,\n    setclassLogin,\n    classDashboard,\n    setclassDashboard,\n    switchswitchChangeApiKey,\n    setswitchswitchChangeApiKey,\n    logInlogOut,\n    setlogInlogOut,\n    ulClassorg,\n    setulClassorg,\n    ulClassnet,\n    setulClassnet,\n    classOrganization,\n    setclassOrganization,\n    classNetwork,\n    setclassNetwork,\n  };\n\n  return (\n    <MainContext.Provider dc={dc}>\n      <Template dc={dc} />\n    </MainContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}