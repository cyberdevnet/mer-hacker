{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frollo\\\\Desktop\\\\DevNet\\\\JavaScript\\\\React\\\\py_react\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Template from \"./components/Template\";\nimport LoginAPI from \"./components/LoginAPI\";\nimport Dashboard from \"./components/Dashboard\";\nimport axios from \"axios\";\nconst MainContext = React.createContext(null);\n\nfunction App() {\n  const [apiKey, setapiKey] = useState({\n    mvar: 1\n  });\n  const [organization, setorganization] = useState(\"Meraki\");\n  const [organizationID, setorganizationID] = useState(0);\n  const [timeZone, settimeZone] = useState(0);\n  const [network, setnetwork] = useState(0);\n  useEffect(() => {\n    fetch(\"/organizations\").then(res => res.json()).then(organizations => {\n      setorganization(organizations.organizations[0].name);\n      setorganizationID(organizations.organizations[0].id);\n    });\n  }, []);\n  useEffect(() => {\n    fetch(\"/networks\").then(res => res.json()).then(network => {\n      setnetwork(network.networks[0].name);\n      settimeZone(network.networks[0].timeZone);\n    });\n  }, []);\n\n  function handlePostQuery(query) {\n    var myParams = {\n      data: query\n    };\n\n    if (query != \"\") {\n      axios.post(\"http://localhost:5000/api/query\", myParams).then(function (response) {\n        console.log(response); //Perform action based on response\n      }).catch(function (error) {\n        console.log(error); //Perform action based on error\n      });\n    } else {\n      alert(\"The search query cannot be empty\");\n    }\n  }\n\n  const dc = {\n    organization,\n    setorganization,\n    organizationID,\n    setorganizationID,\n    timeZone,\n    settimeZone,\n    network,\n    setnetwork\n  };\n  return /*#__PURE__*/React.createElement(MainContext.Provider, {\n    dc: dc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Template, {\n    dc: dc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/frollo/Desktop/DevNet/JavaScript/React/py_react/src/App.js"],"names":["React","useState","useEffect","Template","LoginAPI","Dashboard","axios","MainContext","createContext","App","apiKey","setapiKey","mvar","organization","setorganization","organizationID","setorganizationID","timeZone","settimeZone","network","setnetwork","fetch","then","res","json","organizations","name","id","networks","handlePostQuery","query","myParams","data","post","response","console","log","catch","error","alert","dc"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Template from \"./components/Template\";\nimport LoginAPI from \"./components/LoginAPI\";\nimport Dashboard from \"./components/Dashboard\";\nimport axios from \"axios\";\n\nconst MainContext = React.createContext(null);\n\nfunction App() {\n  const [apiKey, setapiKey] = useState({ mvar: 1 });\n  const [organization, setorganization] = useState(\"Meraki\");\n  const [organizationID, setorganizationID] = useState(0);\n  const [timeZone, settimeZone] = useState(0);\n  const [network, setnetwork] = useState(0);\n\n  useEffect(() => {\n    fetch(\"/organizations\")\n      .then((res) => res.json())\n      .then((organizations) => {\n        setorganization(organizations.organizations[0].name);\n        setorganizationID(organizations.organizations[0].id);\n      });\n  }, []);\n\n  useEffect(() => {\n    fetch(\"/networks\")\n      .then((res) => res.json())\n      .then((network) => {\n        setnetwork(network.networks[0].name);\n        settimeZone(network.networks[0].timeZone);\n      });\n  }, []);\n\n  function handlePostQuery(query) {\n    var myParams = {\n      data: query,\n    };\n\n    if (query != \"\") {\n      axios\n        .post(\"http://localhost:5000/api/query\", myParams)\n        .then(function (response) {\n          console.log(response);\n          //Perform action based on response\n        })\n        .catch(function (error) {\n          console.log(error);\n          //Perform action based on error\n        });\n    } else {\n      alert(\"The search query cannot be empty\");\n    }\n  }\n\n  const dc = {\n    organization,\n    setorganization,\n    organizationID,\n    setorganizationID,\n    timeZone,\n    settimeZone,\n    network,\n    setnetwork,\n  };\n\n  return (\n    <MainContext.Provider dc={dc}>\n      <Template dc={dc} />\n      {/* <Route path=\"/login\" render={(ac) => <LoginAPI {...ac} dc={dc} />} />\n          <Route\n            path=\"/dashboard\"\n            render={(ac) => <Dashboard {...ac} dc={dc} />}\n          /> */}\n    </MainContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}