{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frollo\\\\Desktop\\\\DevNet\\\\JavaScript\\\\React\\\\py_react\\\\src\\\\components\\\\Tools\\\\GetAllOrganizationSubnets.js\";\nimport React, { useEffect } from \"react\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nexport default function GetAllOrganizationSubnets(ac) {\n  const APIbody = {\n    \"X-Cisco-Meraki-API-Key\": `${ac.dc.apiKey}`,\n    organizationId: `${ac.dc.organizationID}`,\n    networkId: `${ac.dc.networkID}`\n  };\n  console.log(\"GetAllOrganizationSubnets -> networkList\", ac.dc.networkList);\n  const NET = Object.values(ac.dc.networkList);\n\n  const test = () => {\n    let networkIDList = [];\n    NET.map(item => {\n      var IDListModel = [{\n        id: item.id\n      }];\n      networkIDList.push(...IDListModel);\n      console.log(networkIDList);\n    });\n  };\n\n  useEffect(() => {\n    fetch(\"/vlans\", {\n      method: [\"POST\"],\n      cache: \"no-cache\",\n      headers: {\n        content_type: \"application/json\"\n      },\n      body: JSON.stringify(APIbody)\n    }).then(response => {\n      return response.json;\n    });\n    fetch(\"/vlans\").then(res => res.json()).then(vlans => {\n      ac.dc.setvlanList(vlans.vlans);\n    });\n  }, [ac.dc.networkID]);\n\n  const handleOrganizationSubnets = e => {\n    e.preventDefault();\n    let row = [];\n    ac.dc.vlanList.map(item => {\n      var rowModel = [{\n        Subnet: item.subnet,\n        VlanID: item.id,\n        VlanName: item.name,\n        MX_IP: item.applianceIp,\n        DNS: item.dnsNameservers\n      }];\n      row.push(...rowModel);\n      ac.dc.setmapRows(row);\n    });\n  };\n\n  const datatable = {\n    columns: [{\n      label: \"Subnet\",\n      field: \"Subnet\",\n      width: 150,\n      attributes: {\n        \"aria-controls\": \"DataTable\",\n        \"aria-label\": \"Description\"\n      }\n    }, {\n      label: \"VLAN ID\",\n      field: \"VlanID\",\n      sort: \"asc\",\n      width: 270\n    }, {\n      label: \"VLAN Name\",\n      field: \"VlanName\",\n      sort: \"asc\",\n      width: 200\n    }, {\n      label: \"MX IP\",\n      field: \"MX_IP\",\n      sort: \"asc\",\n      width: 100\n    }, {\n      label: \"DNS Servers\",\n      field: \"DNS\",\n      sort: \"asc\",\n      width: 100\n    }],\n    rows: ac.dc.mapRows\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-inner-main-templates\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel panel-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel panel-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }\n  }, \"This scripts iterates through all networks in an organization and print all the subnets and VLANs associated with every organization. The script works only on MX and Z3 devices, does not work on VPN HUBs, the network must be reachable in the Meraki Dashboard.\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel panel-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: test,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"Button\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#null\",\n    className: \"btn btn-primary\",\n    onClick: handleOrganizationSubnets,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, \"RUN\"), /*#__PURE__*/React.createElement(MDBDataTableV5, {\n    hover: true,\n    entriesOptions: [10, 25, 50, 100],\n    entries: 10,\n    pagesAmount: 10,\n    data: datatable,\n    pagingTop: true,\n    searchTop: true,\n    searchBottom: false,\n    exportToCSV: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }))))));\n}","map":{"version":3,"sources":["C:/Users/frollo/Desktop/DevNet/JavaScript/React/py_react/src/components/Tools/GetAllOrganizationSubnets.js"],"names":["React","useEffect","MDBDataTableV5","GetAllOrganizationSubnets","ac","APIbody","dc","apiKey","organizationId","organizationID","networkId","networkID","console","log","networkList","NET","Object","values","test","networkIDList","map","item","IDListModel","id","push","fetch","method","cache","headers","content_type","body","JSON","stringify","then","response","json","res","vlans","setvlanList","handleOrganizationSubnets","e","preventDefault","row","vlanList","rowModel","Subnet","subnet","VlanID","VlanName","name","MX_IP","applianceIp","DNS","dnsNameservers","setmapRows","datatable","columns","label","field","width","attributes","sort","rows","mapRows"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { MDBDataTableV5 } from \"mdbreact\";\r\n\r\nexport default function GetAllOrganizationSubnets(ac) {\r\n  const APIbody = {\r\n    \"X-Cisco-Meraki-API-Key\": `${ac.dc.apiKey}`,\r\n    organizationId: `${ac.dc.organizationID}`,\r\n    networkId: `${ac.dc.networkID}`,\r\n  };\r\n  console.log(\"GetAllOrganizationSubnets -> networkList\", ac.dc.networkList);\r\n\r\n  const NET = Object.values(ac.dc.networkList);\r\n\r\n  const test = () => {\r\n    let networkIDList = [];\r\n    NET.map((item) => {\r\n      var IDListModel = [\r\n        {\r\n          id: item.id,\r\n        },\r\n      ];\r\n      networkIDList.push(...IDListModel);\r\n\r\n      console.log(networkIDList);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(\"/vlans\", {\r\n      method: [\"POST\"],\r\n      cache: \"no-cache\",\r\n      headers: {\r\n        content_type: \"application/json\",\r\n      },\r\n      body: JSON.stringify(APIbody),\r\n    }).then((response) => {\r\n      return response.json;\r\n    });\r\n    fetch(\"/vlans\")\r\n      .then((res) => res.json())\r\n      .then((vlans) => {\r\n        ac.dc.setvlanList(vlans.vlans);\r\n      });\r\n  }, [ac.dc.networkID]);\r\n\r\n  const handleOrganizationSubnets = (e) => {\r\n    e.preventDefault();\r\n    let row = [];\r\n    ac.dc.vlanList.map((item) => {\r\n      var rowModel = [\r\n        {\r\n          Subnet: item.subnet,\r\n          VlanID: item.id,\r\n          VlanName: item.name,\r\n          MX_IP: item.applianceIp,\r\n          DNS: item.dnsNameservers,\r\n        },\r\n      ];\r\n      row.push(...rowModel);\r\n      ac.dc.setmapRows(row);\r\n    });\r\n  };\r\n\r\n  const datatable = {\r\n    columns: [\r\n      {\r\n        label: \"Subnet\",\r\n        field: \"Subnet\",\r\n        width: 150,\r\n        attributes: {\r\n          \"aria-controls\": \"DataTable\",\r\n          \"aria-label\": \"Description\",\r\n        },\r\n      },\r\n      {\r\n        label: \"VLAN ID\",\r\n        field: \"VlanID\",\r\n        sort: \"asc\",\r\n        width: 270,\r\n      },\r\n      {\r\n        label: \"VLAN Name\",\r\n        field: \"VlanName\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"MX IP\",\r\n        field: \"MX_IP\",\r\n        sort: \"asc\",\r\n        width: 100,\r\n      },\r\n      {\r\n        label: \"DNS Servers\",\r\n        field: \"DNS\",\r\n        sort: \"asc\",\r\n        width: 100,\r\n      },\r\n    ],\r\n    rows: ac.dc.mapRows,\r\n  };\r\n  return (\r\n    <div id=\"page-inner-main-templates\">\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-12\">\r\n          <div className=\"panel panel-default\">\r\n            <div className=\"panel-body\">\r\n              <div className=\"panel panel-success\">\r\n                <div className=\"panel-heading\">Description</div>\r\n                <div className=\"panel-body\">\r\n                  <p>\r\n                    This scripts iterates through all networks in an\r\n                    organization and print all the subnets and VLANs associated\r\n                    with every organization. The script works only on MX and Z3\r\n                    devices, does not work on VPN HUBs, the network must be\r\n                    reachable in the Meraki Dashboard.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-12\">\r\n          <div className=\"panel panel-default\">\r\n            <div className=\"panel-body\">\r\n              <button onClick={test}>Button</button>\r\n              <a\r\n                href=\"#null\"\r\n                className=\"btn btn-primary\"\r\n                onClick={handleOrganizationSubnets}\r\n              >\r\n                RUN\r\n              </a>\r\n              <MDBDataTableV5\r\n                hover\r\n                entriesOptions={[10, 25, 50, 100]}\r\n                entries={10}\r\n                pagesAmount={10}\r\n                data={datatable}\r\n                pagingTop\r\n                searchTop\r\n                searchBottom={false}\r\n                exportToCSV={true}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}