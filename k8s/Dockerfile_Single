# Stage 0, "build-stage", based on Node.js, to build and compile the frontend
FROM node:latest as build-stage


WORKDIR /mer-hacker

COPY package*.json /mer-hacker/
COPY config-overrides.js /mer-hacker/
COPY k8s/default.conf /mer-hacker/
COPY public/ /mer-hacker/public/
COPY src/ /mer-hacker/src/
COPY build/ /mer-hacker/build/
COPY flask/ /mer-hacker/flask/

COPY ./misc/gunicorn /usr/local/bin/gunicorn
COPY ./misc/gunicorn_config.py /gunicorn_config.py

# RUN npm install

# RUN npm run build


# Stage 1, based on Nginx, to have only the compiled app, ready for production with Nginx
FROM node:latest

COPY --from=build-stage /mer-hacker/build/ /usr/share/nginx/mer-hacker/build
COPY --from=build-stage /mer-hacker/flask/ /flask
COPY --from=build-stage /gunicorn_config.py /gunicorn_config.py


RUN apt update
RUN apt install -y python3-pip

RUN pip3 install -r /flask/requirements.txt

#WORKDIR /flask
ENV LC_ALL C.UTF-8
ENV PYTHONPATH="/usr/local/lib/python3.7/site-packages:/flask"
ENV PATH="/usr/local/bin/:$PATH"
ENV GUNICORN_BIND="0.0.0.0:5000"
ENV GUNICORN_WORKERS="4"

EXPOSE 5000
ENTRYPOINT ["gunicorn", "--config", "gunicorn_config.py", "wsgi:app"]


# Copy the default nginx.conf 
COPY --from=build-stage /mer-hacker/default.conf /etc/nginx/conf.d/default.conf