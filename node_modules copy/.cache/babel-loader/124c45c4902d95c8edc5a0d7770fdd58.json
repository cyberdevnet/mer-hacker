{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frollo\\\\Desktop\\\\DevNet\\\\JavaScript\\\\React\\\\py_react\\\\src\\\\components\\\\LiveLog.js\";\nimport React, { useEffect, useState, useRef } from \"react\";\nexport default function LiveLog() {\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n\n    async function APICallLog() {\n      try {\n        fetch(\"../../api/debug.log\").then(response => {\n          console.log(\"APICallLog -> response\", response);\n        });\n      } catch (err) {\n        if (err) {\n          console.log(err);\n        }\n      }\n    }\n\n    APICallLog();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/frollo/Desktop/DevNet/JavaScript/React/py_react/src/components/LiveLog.js"],"names":["React","useEffect","useState","useRef","LiveLog","isFirstRun","current","APICallLog","fetch","then","response","console","log","err"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,QAAMC,UAAU,GAAGF,MAAM,CAAC,IAAD,CAAzB;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,UAAU,CAACC,OAAf,EAAwB;AACtBD,MAAAA,UAAU,CAACC,OAAX,GAAqB,KAArB;AACA;AACD;;AACD,mBAAeC,UAAf,GAA4B;AAC1B,UAAI;AACFC,QAAAA,KAAK,CAAC,qBAAD,CAAL,CAA6BC,IAA7B,CAAmCC,QAAD,IAAc;AAC9CC,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,QAAtC;AACD,SAFD;AAGD,OAJD,CAIE,OAAOG,GAAP,EAAY;AACZ,YAAIA,GAAJ,EAAS;AACPF,UAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;AACF;;AACDN,IAAAA,UAAU;AACX,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nexport default function LiveLog() {\r\n  const isFirstRun = useRef(true);\r\n  useEffect(() => {\r\n    if (isFirstRun.current) {\r\n      isFirstRun.current = false;\r\n      return;\r\n    }\r\n    async function APICallLog() {\r\n      try {\r\n        fetch(\"../../api/debug.log\").then((response) => {\r\n          console.log(\"APICallLog -> response\", response);\r\n        });\r\n      } catch (err) {\r\n        if (err) {\r\n          console.log(err);\r\n        }\r\n      }\r\n    }\r\n    APICallLog();\r\n  }, []);\r\n\r\n  return <div></div>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}