{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frollo\\\\Desktop\\\\DevNet\\\\JavaScript\\\\React\\\\py_react\\\\src\\\\components\\\\Tools\\\\GetAllDevicesIP.js\";\nimport React, { useEffect, useState, useRef, usePrevious } from \"react\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nexport default function GetAllDevicesIP(ac) {\n  const [showtable, setshowtable] = useState(false);\n  const [trigger, settrigger] = useState(0);\n  const [loading, setloading] = useState(false);\n  const [mapRows, setmapRows] = useState([]); // eslint-disable-next-line\n\n  const [alert, setalert] = useState(false);\n  console.log(\"GetAllDevicesIP -> mapRows\", mapRows);\n  const APIbody = {\n    \"X-Cisco-Meraki-API-Key\": `${ac.dc.apiKey}`,\n    organizationId: `${ac.dc.organizationID}`,\n    networkId: `${ac.dc.networkID}`\n  };\n  const prevmapRows = usePrevious(mapRows);\n  console.log(\"GetAllDevicesIP -> prevmapRows\", prevmapRows);\n\n  function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n\n    if (mapRows === prevmapRows) {\n      setmapRows([]);\n    }\n\n    async function APIcall() {\n      try {\n        setloading(true);\n        fetch(\"/devices\", {\n          method: [\"POST\"],\n          cache: \"no-cache\",\n          headers: {\n            content_type: \"application/json\"\n          },\n          body: JSON.stringify(APIbody)\n        }).then(response => {\n          return response.json;\n        });\n        fetch(\"/devices\").then(res => res.json()).then(client => {\n          ac.dc.setclientList(client.devices);\n        }).then(() => {\n          let row = []; // eslint-disable-next-line\n\n          ac.dc.clientList.map(item => {\n            var rowModel = [{\n              Description: item.name,\n              Model: item.model,\n              LAN_IP_address: item.lanIp,\n              MAC_address: item.mac,\n              WAN_1_IP: item.wan1Ip,\n              WAN_2_IP: item.wan2Ip,\n              Serial: item.serial\n            }];\n            row.push(...rowModel);\n            setmapRows(row);\n          });\n        }).then(() => {\n          if (mapRows.length === 0) {\n            console.log(\"APIcall -> mapRows.length\", mapRows.length);\n            settrigger(trigger + 1);\n          }\n        }).then(() => setloading(false)).then(() => setshowtable(true));\n      } catch (err) {\n        if (err) {\n          setalert(true);\n        }\n      }\n    }\n\n    APIcall(); // eslint-disable-next-line\n  }, [trigger]);\n\n  const handleIPs = e => {\n    e.preventDefault();\n    settrigger(trigger + 1);\n  }; // const handleResults = (e) => {\n  //   e.preventDefault();\n  //   let row = [];\n  //   ac.dc.clientList.map((item) => {\n  //     var rowModel = [\n  //       {\n  //         Description: item.name,\n  //         Model: item.model,\n  //         LAN_IP_address: item.lanIp,\n  //         MAC_address: item.mac,\n  //         WAN_1_IP: item.wan1Ip,\n  //         WAN_2_IP: item.wan2Ip,\n  //         Serial: item.serial,\n  //       },\n  //     ];\n  //     row.push(...rowModel);\n  //     setmapRows(row);\n  //   });\n  //   // setshowtable(true);\n  // };\n\n\n  const datatable = {\n    columns: [{\n      label: \"Description\",\n      field: \"Description\",\n      width: 150,\n      attributes: {\n        \"aria-controls\": \"DataTable\",\n        \"aria-label\": \"Description\"\n      }\n    }, {\n      label: \"Model\",\n      field: \"Model\",\n      sort: \"asc\",\n      width: 270\n    }, {\n      label: \"LAN IP address\",\n      field: \"LAN_IP_address\",\n      sort: \"asc\",\n      width: 200\n    }, {\n      label: \"MAC address\",\n      field: \"MAC_address\",\n      sort: \"asc\",\n      width: 100\n    }, {\n      label: \"WAN 1 IP\",\n      field: \"WAN_1_IP\",\n      sort: \"asc\",\n      width: 150\n    }, {\n      label: \"WAN 2 IP\",\n      field: \"WAN 2 IP\",\n      sort: \"asc\",\n      width: 100\n    }, {\n      label: \"Serial\",\n      field: \"Serial\",\n      sort: \"asc\",\n      width: 100\n    }],\n    rows: mapRows\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-inner-main-templates\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel panel-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-group\",\n    id: \"accordion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel panel-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"panel-title-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    \"data-toggle\": \"collapse\",\n    \"data-parent\": \"#accordion\",\n    href: \"#collapseOne\",\n    className: \"collapsed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 23\n    }\n  }, \"Description\"))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"collapseOne\",\n    className: \"panel-collapse collapse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, \"This scripts iterates through all networks in an organization and returns all the IPs associated with every organization.\")))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: !loading ? handleIPs : null,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, loading && /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-refresh fa-spin\",\n    style: {\n      marginRight: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 19\n    }\n  }), loading && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 29\n    }\n  }, \"Loading Data\"), !loading && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 30\n    }\n  }, \"RUN\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel panel-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, showtable ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MDBDataTableV5, {\n    hover: true,\n    entriesOptions: [10, 25, 50, 100],\n    entries: 10,\n    pagesAmount: 10,\n    data: datatable,\n    pagingTop: true,\n    searchTop: true,\n    searchBottom: false,\n    exportToCSV: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/Users/frollo/Desktop/DevNet/JavaScript/React/py_react/src/components/Tools/GetAllDevicesIP.js"],"names":["React","useEffect","useState","useRef","usePrevious","MDBDataTableV5","GetAllDevicesIP","ac","showtable","setshowtable","trigger","settrigger","loading","setloading","mapRows","setmapRows","alert","setalert","console","log","APIbody","dc","apiKey","organizationId","organizationID","networkId","networkID","prevmapRows","value","ref","current","isFirstRun","APIcall","fetch","method","cache","headers","content_type","body","JSON","stringify","then","response","json","res","client","setclientList","devices","row","clientList","map","item","rowModel","Description","name","Model","model","LAN_IP_address","lanIp","MAC_address","mac","WAN_1_IP","wan1Ip","WAN_2_IP","wan2Ip","Serial","serial","push","length","err","handleIPs","e","preventDefault","datatable","columns","label","field","width","attributes","sort","rows","marginRight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef, usePrevious } from \"react\";\r\nimport { MDBDataTableV5 } from \"mdbreact\";\r\n\r\nexport default function GetAllDevicesIP(ac) {\r\n  const [showtable, setshowtable] = useState(false);\r\n  const [trigger, settrigger] = useState(0);\r\n  const [loading, setloading] = useState(false);\r\n  const [mapRows, setmapRows] = useState([]);\r\n\r\n  // eslint-disable-next-line\r\n  const [alert, setalert] = useState(false);\r\n\r\n  console.log(\"GetAllDevicesIP -> mapRows\", mapRows);\r\n\r\n  const APIbody = {\r\n    \"X-Cisco-Meraki-API-Key\": `${ac.dc.apiKey}`,\r\n    organizationId: `${ac.dc.organizationID}`,\r\n    networkId: `${ac.dc.networkID}`,\r\n  };\r\n\r\n  const prevmapRows = usePrevious(mapRows);\r\n  console.log(\"GetAllDevicesIP -> prevmapRows\", prevmapRows);\r\n\r\n  function usePrevious(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n      ref.current = value;\r\n    });\r\n    return ref.current;\r\n  }\r\n\r\n  const isFirstRun = useRef(true);\r\n  useEffect(() => {\r\n    if (isFirstRun.current) {\r\n      isFirstRun.current = false;\r\n      return;\r\n    }\r\n    if (mapRows === prevmapRows) {\r\n      setmapRows([]);\r\n    }\r\n    async function APIcall() {\r\n      try {\r\n        setloading(true);\r\n        fetch(\"/devices\", {\r\n          method: [\"POST\"],\r\n          cache: \"no-cache\",\r\n          headers: {\r\n            content_type: \"application/json\",\r\n          },\r\n          body: JSON.stringify(APIbody),\r\n        }).then((response) => {\r\n          return response.json;\r\n        });\r\n        fetch(\"/devices\")\r\n          .then((res) => res.json())\r\n          .then((client) => {\r\n            ac.dc.setclientList(client.devices);\r\n          })\r\n          .then(() => {\r\n            let row = [];\r\n            // eslint-disable-next-line\r\n            ac.dc.clientList.map((item) => {\r\n              var rowModel = [\r\n                {\r\n                  Description: item.name,\r\n                  Model: item.model,\r\n                  LAN_IP_address: item.lanIp,\r\n                  MAC_address: item.mac,\r\n                  WAN_1_IP: item.wan1Ip,\r\n                  WAN_2_IP: item.wan2Ip,\r\n                  Serial: item.serial,\r\n                },\r\n              ];\r\n              row.push(...rowModel);\r\n              setmapRows(row);\r\n            });\r\n          })\r\n          .then(() => {\r\n            if (mapRows.length === 0) {\r\n              console.log(\"APIcall -> mapRows.length\", mapRows.length);\r\n              settrigger(trigger + 1);\r\n            }\r\n          })\r\n          .then(() => setloading(false))\r\n          .then(() => setshowtable(true));\r\n      } catch (err) {\r\n        if (err) {\r\n          setalert(true);\r\n        }\r\n      }\r\n    }\r\n\r\n    APIcall();\r\n    // eslint-disable-next-line\r\n  }, [trigger]);\r\n\r\n  const handleIPs = (e) => {\r\n    e.preventDefault();\r\n    settrigger(trigger + 1);\r\n  };\r\n\r\n  // const handleResults = (e) => {\r\n  //   e.preventDefault();\r\n  //   let row = [];\r\n  //   ac.dc.clientList.map((item) => {\r\n  //     var rowModel = [\r\n  //       {\r\n  //         Description: item.name,\r\n  //         Model: item.model,\r\n  //         LAN_IP_address: item.lanIp,\r\n  //         MAC_address: item.mac,\r\n  //         WAN_1_IP: item.wan1Ip,\r\n  //         WAN_2_IP: item.wan2Ip,\r\n  //         Serial: item.serial,\r\n  //       },\r\n  //     ];\r\n  //     row.push(...rowModel);\r\n  //     setmapRows(row);\r\n  //   });\r\n  //   // setshowtable(true);\r\n  // };\r\n\r\n  const datatable = {\r\n    columns: [\r\n      {\r\n        label: \"Description\",\r\n        field: \"Description\",\r\n        width: 150,\r\n        attributes: {\r\n          \"aria-controls\": \"DataTable\",\r\n          \"aria-label\": \"Description\",\r\n        },\r\n      },\r\n      {\r\n        label: \"Model\",\r\n        field: \"Model\",\r\n        sort: \"asc\",\r\n        width: 270,\r\n      },\r\n      {\r\n        label: \"LAN IP address\",\r\n        field: \"LAN_IP_address\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"MAC address\",\r\n        field: \"MAC_address\",\r\n        sort: \"asc\",\r\n        width: 100,\r\n      },\r\n      {\r\n        label: \"WAN 1 IP\",\r\n        field: \"WAN_1_IP\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"WAN 2 IP\",\r\n        field: \"WAN 2 IP\",\r\n        sort: \"asc\",\r\n        width: 100,\r\n      },\r\n      {\r\n        label: \"Serial\",\r\n        field: \"Serial\",\r\n        sort: \"asc\",\r\n        width: 100,\r\n      },\r\n    ],\r\n    rows: mapRows,\r\n  };\r\n\r\n  return (\r\n    <div id=\"page-inner-main-templates\">\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-12\">\r\n          <div className=\"panel panel-default\">\r\n            <div className=\"panel-body\">\r\n              <div className=\"panel-group\" id=\"accordion\">\r\n                <div className=\"panel panel-default\">\r\n                  <div className=\"panel-heading\">\r\n                    <h4 className=\"panel-title-description\">\r\n                      <a\r\n                        data-toggle=\"collapse\"\r\n                        data-parent=\"#accordion\"\r\n                        href=\"#collapseOne\"\r\n                        className=\"collapsed\"\r\n                      >\r\n                        Description\r\n                      </a>\r\n                    </h4>\r\n                  </div>\r\n                  <div id=\"collapseOne\" className=\"panel-collapse collapse\">\r\n                    <div className=\"panel-body\">\r\n                      This scripts iterates through all networks in an\r\n                      organization and returns all the IPs associated with every\r\n                      organization.\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={!loading ? handleIPs : null}\r\n                disabled={loading}\r\n              >\r\n                {loading && (\r\n                  <i\r\n                    className=\"fa fa-refresh fa-spin\"\r\n                    style={{ marginRight: \"5px\" }}\r\n                  />\r\n                )}\r\n                {loading && <span>Loading Data</span>}\r\n                {!loading && <span>RUN</span>}\r\n              </button>\r\n\r\n              {/* <a\r\n                href=\"#null\"\r\n                className=\"btn btn-primary\"\r\n                // onClick={handleResults}\r\n              >\r\n                Show results\r\n              </a> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-12\">\r\n          <div className=\"panel panel-default\">\r\n            {showtable ? (\r\n              <div className=\"panel-body\">\r\n                <MDBDataTableV5\r\n                  hover\r\n                  entriesOptions={[10, 25, 50, 100]}\r\n                  entries={10}\r\n                  pagesAmount={10}\r\n                  data={datatable}\r\n                  pagingTop\r\n                  searchTop\r\n                  searchBottom={false}\r\n                  exportToCSV={true}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}