{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frollo\\\\Desktop\\\\DevNet\\\\JavaScript\\\\React\\\\py_react\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Template from \"./components/Template\";\nimport LoginAPI from \"./components/LoginAPI\";\nimport Dashboard from \"./components/Dashboard\";\nconst MainContext = React.createContext(null);\n\nfunction App() {\n  const [apiKey, setapiKey] = useState(12345);\n  const [organization, setorganization] = useState(\"Meraki\");\n  const [organizationID, setorganizationID] = useState(0);\n  const [timeZone, settimeZone] = useState(0);\n  const [network, setnetwork] = useState(0);\n  useEffect(() => {\n    fetch(\"/organizations\").then(res => res.json()).then(organizations => {\n      setorganization(organizations.organizations[0].name);\n      setorganizationID(organizations.organizations[0].id);\n    });\n  }, []);\n  useEffect(() => {\n    fetch(\"/networks\").then(res => res.json()).then(network => {\n      setnetwork(network.networks[0].name);\n      settimeZone(network.networks[0].timeZone);\n    });\n  }, []);\n  useEffect(() => {\n    fetch(\"/result\", {\n      method: \"POST\",\n      cache: \"no-cache\",\n      headers: {\n        content_type: \"application/json\"\n      },\n      body: JSON.stringify(this.state.value)\n    }).then(response => {\n      return response.json();\n    }).then(json => {\n      this.setState({\n        playerName: json[0]\n      });\n    });\n  }, []);\n  const dc = {\n    organization,\n    setorganization,\n    organizationID,\n    setorganizationID,\n    timeZone,\n    settimeZone,\n    network,\n    setnetwork\n  };\n  return /*#__PURE__*/React.createElement(MainContext.Provider, {\n    dc: dc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Template, {\n    dc: dc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/frollo/Desktop/DevNet/JavaScript/React/py_react/src/App.js"],"names":["React","useState","useEffect","Template","LoginAPI","Dashboard","MainContext","createContext","App","apiKey","setapiKey","organization","setorganization","organizationID","setorganizationID","timeZone","settimeZone","network","setnetwork","fetch","then","res","json","organizations","name","id","networks","method","cache","headers","content_type","body","JSON","stringify","state","value","response","setState","playerName","dc"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,MAAMC,WAAW,GAAGN,KAAK,CAACO,aAAN,CAAoB,IAApB,CAApB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,QAAD,CAAhD;AACA,QAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,CAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,KAAK,CAAC,gBAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,aAAD,IAAmB;AACvBX,MAAAA,eAAe,CAACW,aAAa,CAACA,aAAd,CAA4B,CAA5B,EAA+BC,IAAhC,CAAf;AACAV,MAAAA,iBAAiB,CAACS,aAAa,CAACA,aAAd,CAA4B,CAA5B,EAA+BE,EAAhC,CAAjB;AACD,KALH;AAMD,GAPQ,EAON,EAPM,CAAT;AASAvB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,KAAK,CAAC,WAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESH,OAAD,IAAa;AACjBC,MAAAA,UAAU,CAACD,OAAO,CAACS,QAAR,CAAiB,CAAjB,EAAoBF,IAArB,CAAV;AACAR,MAAAA,WAAW,CAACC,OAAO,CAACS,QAAR,CAAiB,CAAjB,EAAoBX,QAArB,CAAX;AACD,KALH;AAMD,GAPQ,EAON,EAPM,CAAT;AASAb,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,KAAK,CAAC,SAAD,EAAY;AACfQ,MAAAA,MAAM,EAAE,MADO;AAEfC,MAAAA,KAAK,EAAE,UAFQ;AAGfC,MAAAA,OAAO,EAAE;AACPC,QAAAA,YAAY,EAAE;AADP,OAHM;AAMfC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKC,KAAL,CAAWC,KAA1B;AANS,KAAZ,CAAL,CAQGf,IARH,CAQSgB,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACd,IAAT,EAAP;AACD,KAVH,EAWGF,IAXH,CAWSE,IAAD,IAAU;AACd,WAAKe,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAEhB,IAAI,CAAC,CAAD;AAAlB,OAAd;AACD,KAbH;AAcD,GAfQ,EAeN,EAfM,CAAT;AAiBA,QAAMiB,EAAE,GAAG;AACT5B,IAAAA,YADS;AAETC,IAAAA,eAFS;AAGTC,IAAAA,cAHS;AAITC,IAAAA,iBAJS;AAKTC,IAAAA,QALS;AAMTC,IAAAA,WANS;AAOTC,IAAAA,OAPS;AAQTC,IAAAA;AARS,GAAX;AAWA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,EAAE,EAAEqB,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAEA,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD;;AAED,eAAe/B,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Template from \"./components/Template\";\nimport LoginAPI from \"./components/LoginAPI\";\nimport Dashboard from \"./components/Dashboard\";\n\nconst MainContext = React.createContext(null);\n\nfunction App() {\n  const [apiKey, setapiKey] = useState(12345);\n  const [organization, setorganization] = useState(\"Meraki\");\n  const [organizationID, setorganizationID] = useState(0);\n  const [timeZone, settimeZone] = useState(0);\n  const [network, setnetwork] = useState(0);\n\n  useEffect(() => {\n    fetch(\"/organizations\")\n      .then((res) => res.json())\n      .then((organizations) => {\n        setorganization(organizations.organizations[0].name);\n        setorganizationID(organizations.organizations[0].id);\n      });\n  }, []);\n\n  useEffect(() => {\n    fetch(\"/networks\")\n      .then((res) => res.json())\n      .then((network) => {\n        setnetwork(network.networks[0].name);\n        settimeZone(network.networks[0].timeZone);\n      });\n  }, []);\n\n  useEffect(() => {\n    fetch(\"/result\", {\n      method: \"POST\",\n      cache: \"no-cache\",\n      headers: {\n        content_type: \"application/json\",\n      },\n      body: JSON.stringify(this.state.value),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        this.setState({ playerName: json[0] });\n      });\n  }, []);\n\n  const dc = {\n    organization,\n    setorganization,\n    organizationID,\n    setorganizationID,\n    timeZone,\n    settimeZone,\n    network,\n    setnetwork,\n  };\n\n  return (\n    <MainContext.Provider dc={dc}>\n      <Template dc={dc} />\n      {/* <Route path=\"/login\" render={(ac) => <LoginAPI {...ac} dc={dc} />} />\n          <Route\n            path=\"/dashboard\"\n            render={(ac) => <Dashboard {...ac} dc={dc} />}\n          /> */}\n    </MainContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}