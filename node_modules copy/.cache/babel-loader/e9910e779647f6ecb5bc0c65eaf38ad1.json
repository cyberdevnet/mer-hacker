{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frollo\\\\Desktop\\\\DevNet\\\\JavaScript\\\\React\\\\py_react\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Template from \"./components/Template\";\nimport GetallIP from \"./components/Tools/GetallIP\";\nimport LoginAPI from \"./components/LoginAPI\";\nimport Dashboard from \"./components/Dashboard\";\nconst MainContext = React.createContext(null);\n\nfunction App() {\n  const InitialKey = \"12345\";\n  const [apiKey, setapiKey] = useState(InitialKey); // const [apiKey, setapiKey] = useState({\n  //   \"X-Cisco-Meraki-API-Key\": `${InitialKey}`,\n  // });\n\n  const [organizationList, setorganizationList] = useState(\"Meraki\");\n  const [networkList, setnetworkList] = useState([]);\n  const [organization, setorganization] = useState(\"Set Organization\");\n  const [organizationID, setorganizationID] = useState(0);\n  const [networkID, setnetworkID] = useState(0);\n  const [deviceList, setdeviceList] = useState([]);\n  const [clientList, setclientList] = useState([]);\n  const [timeZone, settimeZone] = useState(0);\n  const [network, setnetwork] = useState(\"Networks\");\n  const [Name, setName] = useState(\"\");\n  const [loginEmail, setloginEmail] = useState(\"\");\n  const [inputKey, setinputKey] = useState();\n  const [inputConfKey, setinputConfKey] = useState();\n  const [isLoggedIn, setisLoggedIn] = useState(false);\n  const [switchLoginAPI, setswitchLoginAPI] = useState(true);\n  const [switchDashboard, setswitchDashboard] = useState(false);\n  const [switchLoggedIn, setswitchLoggedIn] = useState(false);\n  const [switchLoggedout, setswitchLoggedout] = useState(false);\n  const [switchTools, setswitchTools] = useState(false);\n  const [switchswitchChangeApiKey, setswitchswitchChangeApiKey] = useState(false);\n  const [classLogin, setclassLogin] = useState(\"active-menu\");\n  const [classDashboard, setclassDashboard] = useState(\"\");\n  const [classOrganization, setclassOrganization] = useState(\"\");\n  const [classNetwork, setclassNetwork] = useState(\"\");\n  const [classTools, setclassTools] = useState(\"\");\n  const [logInlogOut, setlogInlogOut] = useState(\"Login\");\n  const [ulClassorg, setulClassorg] = useState(\"nav nav-second-level\");\n  const [ulClassnet, setulClassnet] = useState(\"nav nav-second-level\");\n  const [totalDevices, settotalDevices] = useState(0);\n  const APIbody = {\n    \"X-Cisco-Meraki-API-Key\": `${apiKey}`,\n    organizationId: `${organizationID}`,\n    networkId: `${networkID}`\n  };\n  useEffect(() => {\n    const data = localStorage.getItem(\"my-token\");\n\n    if (data) {\n      setapiKey(JSON.parse(data));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"my-token\", JSON.stringify(apiKey));\n  });\n  useEffect(() => {\n    fetch(\"/organizations\", {\n      method: [\"POST\"],\n      cache: \"no-cache\",\n      headers: {\n        content_type: \"application/json\"\n      },\n      body: JSON.stringify(APIbody)\n    }).then(response => {\n      return response.json;\n    });\n    fetch(\"/organizations\").then(res => res.json()).then(organizations => {\n      setorganizationList(organizations.organizations);\n    });\n  }, [apiKey]);\n  useEffect(() => {\n    fetch(\"/networks\", {\n      method: [\"POST\"],\n      cache: \"no-cache\",\n      headers: {\n        content_type: \"application/json\"\n      },\n      body: JSON.stringify(APIbody) // body: JSON.stringify(apiKey),\n\n    }).then(response => {\n      return response.json;\n    });\n    fetch(\"/networks\").then(res => res.json()).then(network => {\n      setnetworkList(network.networks);\n      settimeZone(network.networks[0].timeZone);\n    });\n  }, [apiKey, organization]);\n  useEffect(() => {\n    fetch(\"/devices\", {\n      method: [\"POST\"],\n      cache: \"no-cache\",\n      headers: {\n        content_type: \"application/json\"\n      },\n      body: JSON.stringify(APIbody)\n    }).then(response => {\n      return response.json;\n    });\n    fetch(\"/devices\").then(res => res.json()).then(device => {\n      setdeviceList(device.devices);\n      settotalDevices(device.devices.length);\n    });\n  }, [networkID]);\n  const dc = {\n    organizationList,\n    setorganizationList,\n    networkList,\n    setnetworkList,\n    networkID,\n    setnetworkID,\n    organization,\n    setorganization,\n    organizationID,\n    setorganizationID,\n    timeZone,\n    settimeZone,\n    network,\n    setnetwork,\n    apiKey,\n    setapiKey,\n    Name,\n    setName,\n    loginEmail,\n    setloginEmail,\n    inputKey,\n    setinputKey,\n    inputConfKey,\n    setinputConfKey,\n    isLoggedIn,\n    setisLoggedIn,\n    switchLoginAPI,\n    setswitchLoginAPI,\n    switchDashboard,\n    setswitchDashboard,\n    switchLoggedIn,\n    setswitchLoggedIn,\n    switchLoggedout,\n    setswitchLoggedout,\n    switchTools,\n    setswitchTools,\n    classLogin,\n    setclassLogin,\n    classDashboard,\n    setclassDashboard,\n    switchswitchChangeApiKey,\n    setswitchswitchChangeApiKey,\n    logInlogOut,\n    setlogInlogOut,\n    ulClassorg,\n    setulClassorg,\n    ulClassnet,\n    setulClassnet,\n    classOrganization,\n    setclassOrganization,\n    classNetwork,\n    setclassNetwork,\n    totalDevices,\n    settotalDevices,\n    deviceList,\n    setdeviceList,\n    classTools,\n    setclassTools,\n    clientList,\n    setclientList\n  };\n  return /*#__PURE__*/React.createElement(MainContext.Provider, {\n    dc: dc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Template, {\n    dc: dc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(GetallIP, {\n    dc: dc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/frollo/Desktop/DevNet/JavaScript/React/py_react/src/App.js"],"names":["React","useState","useEffect","Template","GetallIP","LoginAPI","Dashboard","MainContext","createContext","App","InitialKey","apiKey","setapiKey","organizationList","setorganizationList","networkList","setnetworkList","organization","setorganization","organizationID","setorganizationID","networkID","setnetworkID","deviceList","setdeviceList","clientList","setclientList","timeZone","settimeZone","network","setnetwork","Name","setName","loginEmail","setloginEmail","inputKey","setinputKey","inputConfKey","setinputConfKey","isLoggedIn","setisLoggedIn","switchLoginAPI","setswitchLoginAPI","switchDashboard","setswitchDashboard","switchLoggedIn","setswitchLoggedIn","switchLoggedout","setswitchLoggedout","switchTools","setswitchTools","switchswitchChangeApiKey","setswitchswitchChangeApiKey","classLogin","setclassLogin","classDashboard","setclassDashboard","classOrganization","setclassOrganization","classNetwork","setclassNetwork","classTools","setclassTools","logInlogOut","setlogInlogOut","ulClassorg","setulClassorg","ulClassnet","setulClassnet","totalDevices","settotalDevices","APIbody","organizationId","networkId","data","localStorage","getItem","JSON","parse","setItem","stringify","fetch","method","cache","headers","content_type","body","then","response","json","res","organizations","networks","device","devices","length","dc"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Template from \"./components/Template\";\nimport GetallIP from \"./components/Tools/GetallIP\";\n\nimport LoginAPI from \"./components/LoginAPI\";\nimport Dashboard from \"./components/Dashboard\";\n\nconst MainContext = React.createContext(null);\n\nfunction App() {\n  const InitialKey = \"12345\";\n  const [apiKey, setapiKey] = useState(InitialKey);\n  // const [apiKey, setapiKey] = useState({\n  //   \"X-Cisco-Meraki-API-Key\": `${InitialKey}`,\n  // });\n  const [organizationList, setorganizationList] = useState(\"Meraki\");\n  const [networkList, setnetworkList] = useState([]);\n  const [organization, setorganization] = useState(\"Set Organization\");\n  const [organizationID, setorganizationID] = useState(0);\n  const [networkID, setnetworkID] = useState(0);\n  const [deviceList, setdeviceList] = useState([]);\n  const [clientList, setclientList] = useState([]);\n  const [timeZone, settimeZone] = useState(0);\n  const [network, setnetwork] = useState(\"Networks\");\n  const [Name, setName] = useState(\"\");\n  const [loginEmail, setloginEmail] = useState(\"\");\n  const [inputKey, setinputKey] = useState();\n  const [inputConfKey, setinputConfKey] = useState();\n  const [isLoggedIn, setisLoggedIn] = useState(false);\n  const [switchLoginAPI, setswitchLoginAPI] = useState(true);\n  const [switchDashboard, setswitchDashboard] = useState(false);\n  const [switchLoggedIn, setswitchLoggedIn] = useState(false);\n  const [switchLoggedout, setswitchLoggedout] = useState(false);\n  const [switchTools, setswitchTools] = useState(false);\n  const [switchswitchChangeApiKey, setswitchswitchChangeApiKey] = useState(\n    false\n  );\n  const [classLogin, setclassLogin] = useState(\"active-menu\");\n  const [classDashboard, setclassDashboard] = useState(\"\");\n  const [classOrganization, setclassOrganization] = useState(\"\");\n  const [classNetwork, setclassNetwork] = useState(\"\");\n  const [classTools, setclassTools] = useState(\"\");\n  const [logInlogOut, setlogInlogOut] = useState(\"Login\");\n  const [ulClassorg, setulClassorg] = useState(\"nav nav-second-level\");\n  const [ulClassnet, setulClassnet] = useState(\"nav nav-second-level\");\n  const [totalDevices, settotalDevices] = useState(0);\n\n  const APIbody = {\n    \"X-Cisco-Meraki-API-Key\": `${apiKey}`,\n    organizationId: `${organizationID}`,\n    networkId: `${networkID}`,\n  };\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"my-token\");\n    if (data) {\n      setapiKey(JSON.parse(data));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"my-token\", JSON.stringify(apiKey));\n  });\n\n  useEffect(() => {\n    fetch(\"/organizations\", {\n      method: [\"POST\"],\n      cache: \"no-cache\",\n      headers: {\n        content_type: \"application/json\",\n      },\n      body: JSON.stringify(APIbody),\n    }).then((response) => {\n      return response.json;\n    });\n    fetch(\"/organizations\")\n      .then((res) => res.json())\n      .then((organizations) => {\n        setorganizationList(organizations.organizations);\n      });\n  }, [apiKey]);\n\n  useEffect(() => {\n    fetch(\"/networks\", {\n      method: [\"POST\"],\n      cache: \"no-cache\",\n      headers: {\n        content_type: \"application/json\",\n      },\n      body: JSON.stringify(APIbody),\n      // body: JSON.stringify(apiKey),\n    }).then((response) => {\n      return response.json;\n    });\n    fetch(\"/networks\")\n      .then((res) => res.json())\n      .then((network) => {\n        setnetworkList(network.networks);\n        settimeZone(network.networks[0].timeZone);\n      });\n  }, [apiKey, organization]);\n\n  useEffect(() => {\n    fetch(\"/devices\", {\n      method: [\"POST\"],\n      cache: \"no-cache\",\n      headers: {\n        content_type: \"application/json\",\n      },\n      body: JSON.stringify(APIbody),\n    }).then((response) => {\n      return response.json;\n    });\n    fetch(\"/devices\")\n      .then((res) => res.json())\n      .then((device) => {\n        setdeviceList(device.devices);\n        settotalDevices(device.devices.length);\n      });\n  }, [networkID]);\n\n  const dc = {\n    organizationList,\n    setorganizationList,\n    networkList,\n    setnetworkList,\n    networkID,\n    setnetworkID,\n    organization,\n    setorganization,\n    organizationID,\n    setorganizationID,\n    timeZone,\n    settimeZone,\n    network,\n    setnetwork,\n    apiKey,\n    setapiKey,\n    Name,\n    setName,\n    loginEmail,\n    setloginEmail,\n    inputKey,\n    setinputKey,\n    inputConfKey,\n    setinputConfKey,\n    isLoggedIn,\n    setisLoggedIn,\n    switchLoginAPI,\n    setswitchLoginAPI,\n    switchDashboard,\n    setswitchDashboard,\n    switchLoggedIn,\n    setswitchLoggedIn,\n    switchLoggedout,\n    setswitchLoggedout,\n    switchTools,\n    setswitchTools,\n    classLogin,\n    setclassLogin,\n    classDashboard,\n    setclassDashboard,\n    switchswitchChangeApiKey,\n    setswitchswitchChangeApiKey,\n    logInlogOut,\n    setlogInlogOut,\n    ulClassorg,\n    setulClassorg,\n    ulClassnet,\n    setulClassnet,\n    classOrganization,\n    setclassOrganization,\n    classNetwork,\n    setclassNetwork,\n    totalDevices,\n    settotalDevices,\n    deviceList,\n    setdeviceList,\n    classTools,\n    setclassTools,\n    clientList,\n    setclientList,\n  };\n\n  return (\n    <MainContext.Provider dc={dc}>\n      <Template dc={dc} />\n      <GetallIP dc={dc} />\n    </MainContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}