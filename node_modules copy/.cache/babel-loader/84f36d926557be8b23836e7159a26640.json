{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frollo\\\\Desktop\\\\DevNet\\\\JavaScript\\\\React\\\\py_react\\\\src\\\\components\\\\Tools\\\\FindPorts.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport Select from \"react-select\";\nexport default function NetworkTopUsers(ac) {\n  const [showtable, setshowtable] = useState(false);\n  const [trigger, settrigger] = useState(0);\n  const [alert, setalert] = useState(false);\n  const APIbody2 = {\n    \"X-Cisco-Meraki-API-Key\": `${ac.dc.apiKey}`,\n    \"X-CSRFToken\": \"frollo\",\n    ORG_ID: `${ac.dc.organizationID}` // MAC_ADDR: \"MAC_ADDR\",\n\n  };\n  useEffect(() => {\n    async function APICallReports() {\n      try {\n        // if (trigger === false) {\n        //   return;\n        // }\n        ac.dc.setloadingButton(true);\n        fetch(\"/find_ports\", {\n          method: [\"POST\"],\n          cache: \"no-cache\",\n          headers: {\n            content_type: \"application/json\"\n          },\n          body: JSON.stringify(APIbody2)\n        }).then(response => response.json()).then(data => console.log(\"APICallReports -> data\", data)).then(() => ac.dc.setloadingButton(false));\n      } catch (err) {\n        if (err) {\n          console.log(err);\n        }\n      }\n    }\n\n    APICallReports();\n  }, [trigger]); //   useEffect(() => {\n  //     async function APICallReports() {\n  //       try {\n  //         // if (trigger === false) {\n  //         //   return;\n  //         // }\n  //         document.getElementById(\"resultButton\").style.visibility = \"hidden\";\n  //         ac.dc.setloadingButton(true);\n  //         fetch(\"/get_report/\")\n  //           .then((res) => res.json())\n  //           .then((reports) => {\n  //             ac.dc.setreports(reports.reports);\n  //           })\n  //           .then(() => ac.dc.setloadingButton(false))\n  //           .then(\n  //             () =>\n  //               (document.getElementById(\"runButton\").style.visibility = \"hidden\")\n  //           )\n  //           .then(\n  //             () =>\n  //               (document.getElementById(\"resultButton\").style.visibility =\n  //                 \"visible\")\n  //           );\n  //       } catch (err) {\n  //         if (err) {\n  //           setalert(true);\n  //         }\n  //       }\n  //     }\n  //     APICallReports();\n  //   }, [trigger]);\n  // const ORGANIZATIONS = ac.dc.organizationList.map((opt, index) => ({\n  //   label: opt.name,\n  //   value: index,\n  //   id: opt.id,\n  // }));\n  // const NETWORKS = ac.dc.networkList.map((opt, index) => ({\n  //   label: opt.name,\n  //   value: index,\n  //   id: opt.id,\n  // }));\n\n  const handleTopUsers = e => {\n    e.preventDefault();\n    settrigger(trigger + 1);\n  };\n\n  const HandleOrganization = opt => {\n    ac.dc.setorganization(opt.label);\n    ac.dc.setorganizationID(opt.id);\n    ac.dc.setnetwork(\"Networks\");\n  };\n\n  const HandleNetwork = opt => {\n    ac.dc.setnetwork(opt.label);\n    ac.dc.setnetworkID(opt.id);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-inner-main-templates\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel panel-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-group\",\n    id: \"accordion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel panel-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"panel-title-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    \"data-toggle\": \"collapse\",\n    \"data-parent\": \"#accordion\",\n    href: \"#collapseOne\",\n    className: \"collapsed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 23\n    }\n  }, \"Description\"))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"collapseOne\",\n    className: \"panel-collapse collapse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, \"This script finds all MS switchports that match the input search parameter, searching either by clients from a file listing MAC addresses (one per line), a specific tag in Dashboard currently applied to ports, or the specific access policy currently configured.\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"runButton\",\n    className: \"btn btn-primary\",\n    onClick: !ac.dc.loadingButton ? handleTopUsers : null,\n    disabled: ac.dc.loadingButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, ac.dc.loadingButton && /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-refresh fa-spin\",\n    style: {\n      marginRight: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }), ac.dc.loadingButton && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 41\n    }\n  }, \"Loading Data\"), !ac.dc.loadingButton && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 42\n    }\n  }, \"RUN\")), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"resultButton\",\n    href: \"#null\",\n    className: \"btn btn-primary\" // onClick={handleResults}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }, \"Show results\"))))));\n}","map":{"version":3,"sources":["C:/Users/frollo/Desktop/DevNet/JavaScript/React/py_react/src/components/Tools/FindPorts.js"],"names":["React","useEffect","useState","MDBDataTableV5","Select","NetworkTopUsers","ac","showtable","setshowtable","trigger","settrigger","alert","setalert","APIbody2","dc","apiKey","ORG_ID","organizationID","APICallReports","setloadingButton","fetch","method","cache","headers","content_type","body","JSON","stringify","then","response","json","data","console","log","err","handleTopUsers","e","preventDefault","HandleOrganization","opt","setorganization","label","setorganizationID","id","setnetwork","HandleNetwork","setnetworkID","loadingButton","marginRight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { MDBDataTableV5 } from \"mdbreact\";\r\nimport Select from \"react-select\";\r\n\r\nexport default function NetworkTopUsers(ac) {\r\n  const [showtable, setshowtable] = useState(false);\r\n  const [trigger, settrigger] = useState(0);\r\n  const [alert, setalert] = useState(false);\r\n\r\n  const APIbody2 = {\r\n    \"X-Cisco-Meraki-API-Key\": `${ac.dc.apiKey}`,\r\n    \"X-CSRFToken\": \"frollo\",\r\n    ORG_ID: `${ac.dc.organizationID}`,\r\n    // MAC_ADDR: \"MAC_ADDR\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function APICallReports() {\r\n      try {\r\n        // if (trigger === false) {\r\n        //   return;\r\n        // }\r\n        ac.dc.setloadingButton(true);\r\n\r\n        fetch(\"/find_ports\", {\r\n          method: [\"POST\"],\r\n          cache: \"no-cache\",\r\n          headers: {\r\n            content_type: \"application/json\",\r\n          },\r\n          body: JSON.stringify(APIbody2),\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => console.log(\"APICallReports -> data\", data))\r\n\r\n          .then(() => ac.dc.setloadingButton(false));\r\n      } catch (err) {\r\n        if (err) {\r\n          console.log(err);\r\n        }\r\n      }\r\n    }\r\n    APICallReports();\r\n  }, [trigger]);\r\n\r\n  //   useEffect(() => {\r\n  //     async function APICallReports() {\r\n  //       try {\r\n  //         // if (trigger === false) {\r\n  //         //   return;\r\n  //         // }\r\n  //         document.getElementById(\"resultButton\").style.visibility = \"hidden\";\r\n  //         ac.dc.setloadingButton(true);\r\n\r\n  //         fetch(\"/get_report/\")\r\n  //           .then((res) => res.json())\r\n  //           .then((reports) => {\r\n  //             ac.dc.setreports(reports.reports);\r\n  //           })\r\n  //           .then(() => ac.dc.setloadingButton(false))\r\n  //           .then(\r\n  //             () =>\r\n  //               (document.getElementById(\"runButton\").style.visibility = \"hidden\")\r\n  //           )\r\n  //           .then(\r\n  //             () =>\r\n  //               (document.getElementById(\"resultButton\").style.visibility =\r\n  //                 \"visible\")\r\n  //           );\r\n  //       } catch (err) {\r\n  //         if (err) {\r\n  //           setalert(true);\r\n  //         }\r\n  //       }\r\n  //     }\r\n\r\n  //     APICallReports();\r\n  //   }, [trigger]);\r\n\r\n  // const ORGANIZATIONS = ac.dc.organizationList.map((opt, index) => ({\r\n  //   label: opt.name,\r\n  //   value: index,\r\n  //   id: opt.id,\r\n  // }));\r\n\r\n  // const NETWORKS = ac.dc.networkList.map((opt, index) => ({\r\n  //   label: opt.name,\r\n  //   value: index,\r\n  //   id: opt.id,\r\n  // }));\r\n\r\n  const handleTopUsers = (e) => {\r\n    e.preventDefault();\r\n    settrigger(trigger + 1);\r\n  };\r\n\r\n  const HandleOrganization = (opt) => {\r\n    ac.dc.setorganization(opt.label);\r\n    ac.dc.setorganizationID(opt.id);\r\n    ac.dc.setnetwork(\"Networks\");\r\n  };\r\n\r\n  const HandleNetwork = (opt) => {\r\n    ac.dc.setnetwork(opt.label);\r\n    ac.dc.setnetworkID(opt.id);\r\n  };\r\n\r\n  return (\r\n    <div id=\"page-inner-main-templates\">\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-12\">\r\n          <div className=\"panel panel-default\">\r\n            <div className=\"panel-body\">\r\n              <div className=\"panel-group\" id=\"accordion\">\r\n                <div className=\"panel panel-default\">\r\n                  <div className=\"panel-heading\">\r\n                    <h4 className=\"panel-title-description\">\r\n                      <a\r\n                        data-toggle=\"collapse\"\r\n                        data-parent=\"#accordion\"\r\n                        href=\"#collapseOne\"\r\n                        className=\"collapsed\"\r\n                      >\r\n                        Description\r\n                      </a>\r\n                    </h4>\r\n                  </div>\r\n                  <div id=\"collapseOne\" className=\"panel-collapse collapse\">\r\n                    <div className=\"panel-body\">\r\n                      This script finds all MS switchports that match the input\r\n                      search parameter, searching either by clients from a file\r\n                      listing MAC addresses (one per line), a specific tag in\r\n                      Dashboard currently applied to ports, or the specific\r\n                      access policy currently configured.\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex\">\r\n                {/* <Select\r\n                  options={ORGANIZATIONS}\r\n                  placeholder={ac.dc.organization}\r\n                  onChange={HandleOrganization}\r\n                />\r\n                <Select\r\n                  options={NETWORKS}\r\n                  placeholder={ac.dc.network}\r\n                  onChange={HandleNetwork}\r\n                /> */}\r\n                {/* <Select options={DEVICES} placeholder=\"Select Device\" /> */}\r\n              </div>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n              <button\r\n                id=\"runButton\"\r\n                className=\"btn btn-primary\"\r\n                onClick={!ac.dc.loadingButton ? handleTopUsers : null}\r\n                disabled={ac.dc.loadingButton}\r\n              >\r\n                {ac.dc.loadingButton && (\r\n                  <i\r\n                    className=\"fa fa-refresh fa-spin\"\r\n                    style={{ marginRight: \"5px\" }}\r\n                  />\r\n                )}\r\n                {ac.dc.loadingButton && <span>Loading Data</span>}\r\n                {!ac.dc.loadingButton && <span>RUN</span>}\r\n              </button>\r\n\r\n              <button\r\n                id=\"resultButton\"\r\n                href=\"#null\"\r\n                className=\"btn btn-primary\"\r\n                // onClick={handleResults}\r\n              >\r\n                Show results\r\n              </button>\r\n            </div>\r\n            {/* </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}