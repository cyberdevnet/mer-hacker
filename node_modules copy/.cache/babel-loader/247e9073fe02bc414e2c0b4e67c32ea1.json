{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frollo\\\\Desktop\\\\DevNet\\\\JavaScript\\\\React\\\\py_react\\\\src\\\\components\\\\Tools\\\\FindPorts.js\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"../../styles/FindPorts.css\";\nexport default function NetworkTopUsers(ac) {\n  const [showtable, setshowtable] = useState(false);\n  const [trigger, settrigger] = useState(0);\n  const [findPort, setfindPort] = useState([]);\n  const [macAddress, setmacAddress] = useState(\"\");\n  console.log(\"NetworkTopUsers -> macAddress\", macAddress);\n  const APIbody2 = {\n    \"X-Cisco-Meraki-API-Key\": `${ac.dc.apiKey}`,\n    \"X-CSRFToken\": \"frollo\",\n    ORG_ID: `${ac.dc.organizationID}`,\n    MAC_ADDR: `${macAddress}`\n  };\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n\n    async function APICallReports() {\n      if (ac.dc.isOrgSelected && ac.dc.isNetSelected === true) {\n        try {\n          ac.dc.setloadingButton(true);\n          fetch(\"/find_ports\", {\n            method: [\"POST\"],\n            cache: \"no-cache\",\n            headers: {\n              content_type: \"application/json\"\n            },\n            body: JSON.stringify(APIbody2)\n          }).then(response => response.json()).then(data => setfindPort(data.data)).then(() => ac.dc.setloadingButton(false)).then(() => setshowtable(true));\n        } catch (err) {\n          if (err) {\n            console.log(err);\n          }\n        }\n      } else {\n        ac.dc.setswitchAlertModal(true);\n        ac.dc.setswitchToolsTemplate(false);\n      }\n    }\n\n    APICallReports();\n    return () => {\n      setfindPort([]);\n      setshowtable(false);\n    }; // eslint-disable-next-line\n  }, [trigger]);\n\n  const handleTopUsers = e => {\n    e.preventDefault();\n    settrigger(trigger + 1);\n    setshowtable(true);\n  }; // const HandleOrganization = (opt) => {\n  //   ac.dc.setorganization(opt.label);\n  //   ac.dc.setorganizationID(opt.id);\n  //   ac.dc.setnetwork(\"Networks\");\n  // };\n  // const HandleNetwork = (opt) => {\n  //   ac.dc.setnetwork(opt.label);\n  //   ac.dc.setnetworkID(opt.id);\n  // };\n  // VALIDATION FORM\n  // we use the help of useRef to test if it's the first render\n\n\n  const firstRender = useRef(true); // set a state variable which can be used to disable the save/submit button\n  // we set it to true so that the form is disabled on first render\n\n  const [disable, setDisabled] = useState(true); // we can also set error messages to display to the user\n\n  const [nameError, setNameError] = useState(null); // set initial state value(s) for example:\n\n  const [nameLabel, setNameLabel] = useState(\"\"); // for every change in our state this will be fired\n  // we add validation here and disable the save button if required\n\n  useEffect(() => {\n    // we want to skip validation on first render\n    if (firstRender.current) {\n      firstRender.current = false;\n      return;\n    } // here we can disable/enable the save button by wrapping the setState function\n    // in a call to the validation function which returns true/false\n\n\n    setDisabled(formValidation());\n  }, [nameLabel]); // any state variable(s) included in here will trigger the effect to run\n  // here we run any validation, returning true/false\n\n  const formValidation = () => {\n    if (nameLabel === \"\") {\n      setNameError(\"Name cant be blank!\");\n      return true;\n    } else {\n      setNameError(null);\n      return false;\n    }\n  };\n\n  const handleSave = () => {// ...\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-inner-main-templates\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel panel-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-group\",\n    id: \"accordion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel panel-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"panel-title-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    \"data-toggle\": \"collapse\",\n    \"data-parent\": \"#accordion\",\n    href: \"#collapseOne\",\n    className: \"collapsed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 23\n    }\n  }, \"Description\"))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"collapseOne\",\n    className: \"panel-collapse collapse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, \"This script finds all MS switchports that match the input search parameter, searching either by clients from a file listing MAC addresses (one per line), a specific tag in Dashboard currently applied to ports, or the specific access policy currently configured.\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-input-error-msg alert alert-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"glyphicon glyphicon-exclamation-sign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }), \"This field is mandatary\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"nameLabel\",\n    class: \"form-control validate\",\n    onChange: e => setNameLabel(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }), nameError && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 33\n    }\n  }, nameError), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: disable,\n    class: \"btn btn-primary btn-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 19\n    }\n  }, \"Save\"))), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"runButton\",\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    onClick: !ac.dc.loadingButton ? handleTopUsers : null,\n    disabled: ac.dc.loadingButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, ac.dc.loadingButton && /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-refresh fa-spin\",\n    style: {\n      marginRight: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 19\n    }\n  }), ac.dc.loadingButton && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 41\n    }\n  }, \"Loading Data\"), !ac.dc.loadingButton && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 42\n    }\n  }, \"RUN\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel panel-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, showtable ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive table-bordered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 25\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 25\n    }\n  }, \"Switch\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 25\n    }\n  }, \"Port\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 25\n    }\n  }, \"IP Address\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 25\n    }\n  }, \"MAC Address\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 25\n    }\n  }, \"1\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 25\n    }\n  }, findPort[0]), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 25\n    }\n  }, findPort[1]), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 25\n    }\n  })))))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/Users/frollo/Desktop/DevNet/JavaScript/React/py_react/src/components/Tools/FindPorts.js"],"names":["React","useEffect","useState","useRef","NetworkTopUsers","ac","showtable","setshowtable","trigger","settrigger","findPort","setfindPort","macAddress","setmacAddress","console","log","APIbody2","dc","apiKey","ORG_ID","organizationID","MAC_ADDR","isFirstRun","current","APICallReports","isOrgSelected","isNetSelected","setloadingButton","fetch","method","cache","headers","content_type","body","JSON","stringify","then","response","json","data","err","setswitchAlertModal","setswitchToolsTemplate","handleTopUsers","e","preventDefault","firstRender","disable","setDisabled","nameError","setNameError","nameLabel","setNameLabel","formValidation","handleSave","target","value","loadingButton","marginRight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"../../styles/FindPorts.css\";\r\n\r\nexport default function NetworkTopUsers(ac) {\r\n  const [showtable, setshowtable] = useState(false);\r\n  const [trigger, settrigger] = useState(0);\r\n  const [findPort, setfindPort] = useState([]);\r\n  const [macAddress, setmacAddress] = useState(\"\");\r\n  console.log(\"NetworkTopUsers -> macAddress\", macAddress);\r\n\r\n  const APIbody2 = {\r\n    \"X-Cisco-Meraki-API-Key\": `${ac.dc.apiKey}`,\r\n    \"X-CSRFToken\": \"frollo\",\r\n    ORG_ID: `${ac.dc.organizationID}`,\r\n    MAC_ADDR: `${macAddress}`,\r\n  };\r\n\r\n  const isFirstRun = useRef(true);\r\n  useEffect(() => {\r\n    if (isFirstRun.current) {\r\n      isFirstRun.current = false;\r\n      return;\r\n    }\r\n    async function APICallReports() {\r\n      if (ac.dc.isOrgSelected && ac.dc.isNetSelected === true) {\r\n        try {\r\n          ac.dc.setloadingButton(true);\r\n\r\n          fetch(\"/find_ports\", {\r\n            method: [\"POST\"],\r\n            cache: \"no-cache\",\r\n            headers: {\r\n              content_type: \"application/json\",\r\n            },\r\n            body: JSON.stringify(APIbody2),\r\n          })\r\n            .then((response) => response.json())\r\n            .then((data) => setfindPort(data.data))\r\n\r\n            .then(() => ac.dc.setloadingButton(false))\r\n            .then(() => setshowtable(true));\r\n        } catch (err) {\r\n          if (err) {\r\n            console.log(err);\r\n          }\r\n        }\r\n      } else {\r\n        ac.dc.setswitchAlertModal(true);\r\n        ac.dc.setswitchToolsTemplate(false);\r\n      }\r\n    }\r\n    APICallReports();\r\n    return () => {\r\n      setfindPort([]);\r\n      setshowtable(false);\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [trigger]);\r\n\r\n  const handleTopUsers = (e) => {\r\n    e.preventDefault();\r\n    settrigger(trigger + 1);\r\n    setshowtable(true);\r\n  };\r\n\r\n  // const HandleOrganization = (opt) => {\r\n  //   ac.dc.setorganization(opt.label);\r\n  //   ac.dc.setorganizationID(opt.id);\r\n  //   ac.dc.setnetwork(\"Networks\");\r\n  // };\r\n\r\n  // const HandleNetwork = (opt) => {\r\n  //   ac.dc.setnetwork(opt.label);\r\n  //   ac.dc.setnetworkID(opt.id);\r\n  // };\r\n\r\n  // VALIDATION FORM\r\n\r\n  // we use the help of useRef to test if it's the first render\r\n  const firstRender = useRef(true);\r\n\r\n  // set a state variable which can be used to disable the save/submit button\r\n  // we set it to true so that the form is disabled on first render\r\n  const [disable, setDisabled] = useState(true);\r\n\r\n  // we can also set error messages to display to the user\r\n  const [nameError, setNameError] = useState(null);\r\n\r\n  // set initial state value(s) for example:\r\n  const [nameLabel, setNameLabel] = useState(\"\");\r\n\r\n  // for every change in our state this will be fired\r\n  // we add validation here and disable the save button if required\r\n  useEffect(() => {\r\n    // we want to skip validation on first render\r\n    if (firstRender.current) {\r\n      firstRender.current = false;\r\n      return;\r\n    }\r\n\r\n    // here we can disable/enable the save button by wrapping the setState function\r\n    // in a call to the validation function which returns true/false\r\n    setDisabled(formValidation());\r\n  }, [nameLabel]); // any state variable(s) included in here will trigger the effect to run\r\n\r\n  // here we run any validation, returning true/false\r\n  const formValidation = () => {\r\n    if (nameLabel === \"\") {\r\n      setNameError(\"Name cant be blank!\");\r\n      return true;\r\n    } else {\r\n      setNameError(null);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleSave = () => {\r\n    // ...\r\n  };\r\n\r\n  return (\r\n    <div id=\"page-inner-main-templates\">\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-12\">\r\n          <div className=\"panel panel-default\">\r\n            <div className=\"panel-body\">\r\n              <div className=\"panel-group\" id=\"accordion\">\r\n                <div className=\"panel panel-default\">\r\n                  <div className=\"panel-heading\">\r\n                    <h4 className=\"panel-title-description\">\r\n                      <a\r\n                        data-toggle=\"collapse\"\r\n                        data-parent=\"#accordion\"\r\n                        href=\"#collapseOne\"\r\n                        className=\"collapsed\"\r\n                      >\r\n                        Description\r\n                      </a>\r\n                    </h4>\r\n                  </div>\r\n                  <div id=\"collapseOne\" className=\"panel-collapse collapse\">\r\n                    <div className=\"panel-body\">\r\n                      This script finds all MS switchports that match the input\r\n                      search parameter, searching either by clients from a file\r\n                      listing MAC addresses (one per line), a specific tag in\r\n                      Dashboard currently applied to ports, or the specific\r\n                      access policy currently configured.\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex\"></div>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n              <div class=\"form-group\">\r\n                <form onSubmit={handleSave}>\r\n                  <div class=\"form-input-error-msg alert alert-danger\">\r\n                    <span class=\"glyphicon glyphicon-exclamation-sign\"></span>\r\n                    This field is mandatary\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"nameLabel\"\r\n                    class=\"form-control validate\"\r\n                    onChange={(e) => setNameLabel(e.target.value)}\r\n                  />\r\n                  {nameError && <p>{nameError}</p>}\r\n                  <button\r\n                    type=\"submit\"\r\n                    disabled={disable}\r\n                    class=\"btn btn-primary btn-lg\"\r\n                  >\r\n                    Save\r\n                  </button>\r\n                </form>\r\n              </div>\r\n\r\n              {/* <form >\r\n                <div class=\"form-group\">\r\n                  <label class=\"control-label\" for=\"mac-address\">\r\n                    Text 1\r\n                  </label>\r\n                  <div class=\"form-input-error-msg alert alert-danger\">\r\n                    <span class=\"glyphicon glyphicon-exclamation-sign\"></span>\r\n                    This field is mandatary\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"mac-address\"\r\n                    class=\"form-control validate\"\r\n                    onChange={(e) => setmacAddress(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <button id=\"submit\" class=\"btn btn-primary btn-lg\">\r\n                  Sumbit\r\n                </button>\r\n              </form> */}\r\n              <button\r\n                id=\"runButton\"\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\"\r\n                onClick={!ac.dc.loadingButton ? handleTopUsers : null}\r\n                disabled={ac.dc.loadingButton}\r\n              >\r\n                {ac.dc.loadingButton && (\r\n                  <i\r\n                    className=\"fa fa-refresh fa-spin\"\r\n                    style={{ marginRight: \"5px\" }}\r\n                  />\r\n                )}\r\n                {ac.dc.loadingButton && <span>Loading Data</span>}\r\n                {!ac.dc.loadingButton && <span>RUN</span>}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-12\">\r\n          <div className=\"panel panel-default\">\r\n            {showtable ? (\r\n              <div className=\"panel-body\">\r\n                <div className=\"table-responsive table-bordered\">\r\n                  <table className=\"table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>#</th>\r\n                        <th>Switch</th>\r\n                        <th>Port</th>\r\n                        <th>IP Address</th>\r\n                        <th>MAC Address</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>1</td>\r\n                        <td>{findPort[0]}</td>\r\n                        <td>{findPort[1]}</td>\r\n                        <td></td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}