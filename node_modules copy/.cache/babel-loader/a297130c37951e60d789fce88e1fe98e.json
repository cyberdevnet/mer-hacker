{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frollo\\\\Desktop\\\\DevNet\\\\JavaScript\\\\React\\\\py_react\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Template from \"./components/Template\";\nimport LoginAPI from \"./components/LoginAPI\";\nimport Dashboard from \"./components/Dashboard\";\nconst MainContext = React.createContext(null);\n\nfunction App() {\n  const [apiKey, setapiKey] = useState(\"d5c1be108a9dc2c89ea4ba757abc2355b704e774\"); // const [apiKey, setapiKey] = useState({\n  //   \"X-Cisco-Meraki-API-Key\": \"d5c1be108a9dc2c89ea4ba757abc2355b704e774\",\n  // });\n\n  const [organization, setorganization] = useState(\"Meraki\");\n  const [organizationID, setorganizationID] = useState(0);\n  const [timeZone, settimeZone] = useState(0);\n  const [network, setnetwork] = useState(0);\n  console.log(apiKey); // useEffect(() => {\n  //   fetch(\"/organizations\")\n  //     .then((res) => res.json())\n  //     .then((organizations) => {\n  //       setorganization(organizations.organizations[0].name);\n  //       setorganizationID(organizations.organizations[0].id);\n  //     });\n  // }, []);\n  // useEffect(() => {\n  //   fetch(\"/networks\")\n  //     .then((res) => res.json())\n  //     .then((network) => {\n  //       setnetwork(network.networks[0].name);\n  //       settimeZone(network.networks[0].timeZone);\n  //     });\n  // }, []);\n\n  useEffect(() => {\n    fetch(\"/organizations\", {\n      method: [\"POST\"],\n      cache: \"no-cache\",\n      headers: {\n        content_type: \"application/json\"\n      },\n      body: JSON.stringify(`{\"X-Cisco-Meraki-API-Key\" : \"${apiKey}\"}`)\n    }).then(response => {\n      return response.json;\n    });\n    fetch(\"/organizations\").then(res => res.json()).then(organizations => {\n      setorganization(organizations.organizations[0].name);\n      setorganizationID(organizations.organizations[0].id);\n    });\n  }, []); // useEffect(() => {\n  //   fetch(\"/APIKey\", {\n  //     method: \"POST\",\n  //     cache: \"no-cache\",\n  //     headers: {\n  //       content_type: \"application/json\",\n  //     },\n  //     body: JSON.stringify(apiKey),\n  //   }).then((response) => {\n  //     return response.json;\n  //   });\n  // }, []);\n\n  const dc = {\n    organization,\n    setorganization,\n    organizationID,\n    setorganizationID,\n    timeZone,\n    settimeZone,\n    network,\n    setnetwork,\n    apiKey,\n    setapiKey\n  };\n  return /*#__PURE__*/React.createElement(MainContext.Provider, {\n    dc: dc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Template, {\n    dc: dc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/frollo/Desktop/DevNet/JavaScript/React/py_react/src/App.js"],"names":["React","useState","useEffect","Template","LoginAPI","Dashboard","MainContext","createContext","App","apiKey","setapiKey","organization","setorganization","organizationID","setorganizationID","timeZone","settimeZone","network","setnetwork","console","log","fetch","method","cache","headers","content_type","body","JSON","stringify","then","response","json","res","organizations","name","id","dc"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,MAAMC,WAAW,GAAGN,KAAK,CAACO,aAAN,CAAoB,IAApB,CAApB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAClC,0CADkC,CAApC,CADa,CAIb;AACA;AACA;;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,QAAD,CAAhD;AACA,QAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,CAAD,CAAtC;AAEAkB,EAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ,EAZa,CAcb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,KAAK,CAAC,gBAAD,EAAmB;AACtBC,MAAAA,MAAM,EAAE,CAAC,MAAD,CADc;AAEtBC,MAAAA,KAAK,EAAE,UAFe;AAGtBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,YAAY,EAAE;AADP,OAHa;AAMtBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAgB,gCAA+BnB,MAAO,IAAtD;AANgB,KAAnB,CAAL,CAOGoB,IAPH,CAOSC,QAAD,IAAc;AACpB,aAAOA,QAAQ,CAACC,IAAhB;AACD,KATD;AAUAV,IAAAA,KAAK,CAAC,gBAAD,CAAL,CACGQ,IADH,CACSG,GAAD,IAASA,GAAG,CAACD,IAAJ,EADjB,EAEGF,IAFH,CAESI,aAAD,IAAmB;AACvBrB,MAAAA,eAAe,CAACqB,aAAa,CAACA,aAAd,CAA4B,CAA5B,EAA+BC,IAAhC,CAAf;AACApB,MAAAA,iBAAiB,CAACmB,aAAa,CAACA,aAAd,CAA4B,CAA5B,EAA+BE,EAAhC,CAAjB;AACD,KALH;AAMD,GAjBQ,EAiBN,EAjBM,CAAT,CAhCa,CAmDb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,EAAE,GAAG;AACTzB,IAAAA,YADS;AAETC,IAAAA,eAFS;AAGTC,IAAAA,cAHS;AAITC,IAAAA,iBAJS;AAKTC,IAAAA,QALS;AAMTC,IAAAA,WANS;AAOTC,IAAAA,OAPS;AAQTC,IAAAA,UARS;AASTT,IAAAA,MATS;AAUTC,IAAAA;AAVS,GAAX;AAaA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,EAAE,EAAE0B,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAEA,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD;;AAED,eAAe5B,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Template from \"./components/Template\";\nimport LoginAPI from \"./components/LoginAPI\";\nimport Dashboard from \"./components/Dashboard\";\n\nconst MainContext = React.createContext(null);\n\nfunction App() {\n  const [apiKey, setapiKey] = useState(\n    \"d5c1be108a9dc2c89ea4ba757abc2355b704e774\"\n  );\n  // const [apiKey, setapiKey] = useState({\n  //   \"X-Cisco-Meraki-API-Key\": \"d5c1be108a9dc2c89ea4ba757abc2355b704e774\",\n  // });\n  const [organization, setorganization] = useState(\"Meraki\");\n  const [organizationID, setorganizationID] = useState(0);\n  const [timeZone, settimeZone] = useState(0);\n  const [network, setnetwork] = useState(0);\n\n  console.log(apiKey);\n\n  // useEffect(() => {\n  //   fetch(\"/organizations\")\n  //     .then((res) => res.json())\n  //     .then((organizations) => {\n  //       setorganization(organizations.organizations[0].name);\n  //       setorganizationID(organizations.organizations[0].id);\n  //     });\n  // }, []);\n\n  // useEffect(() => {\n  //   fetch(\"/networks\")\n  //     .then((res) => res.json())\n  //     .then((network) => {\n  //       setnetwork(network.networks[0].name);\n  //       settimeZone(network.networks[0].timeZone);\n  //     });\n  // }, []);\n\n  useEffect(() => {\n    fetch(\"/organizations\", {\n      method: [\"POST\"],\n      cache: \"no-cache\",\n      headers: {\n        content_type: \"application/json\",\n      },\n      body: JSON.stringify(`{\"X-Cisco-Meraki-API-Key\" : \"${apiKey}\"}`),\n    }).then((response) => {\n      return response.json;\n    });\n    fetch(\"/organizations\")\n      .then((res) => res.json())\n      .then((organizations) => {\n        setorganization(organizations.organizations[0].name);\n        setorganizationID(organizations.organizations[0].id);\n      });\n  }, []);\n\n  // useEffect(() => {\n  //   fetch(\"/APIKey\", {\n  //     method: \"POST\",\n  //     cache: \"no-cache\",\n  //     headers: {\n  //       content_type: \"application/json\",\n  //     },\n  //     body: JSON.stringify(apiKey),\n  //   }).then((response) => {\n  //     return response.json;\n  //   });\n  // }, []);\n\n  const dc = {\n    organization,\n    setorganization,\n    organizationID,\n    setorganizationID,\n    timeZone,\n    settimeZone,\n    network,\n    setnetwork,\n    apiKey,\n    setapiKey,\n  };\n\n  return (\n    <MainContext.Provider dc={dc}>\n      <Template dc={dc} />\n      {/* <Route path=\"/login\" render={(ac) => <LoginAPI {...ac} dc={dc} />} />\n          <Route\n            path=\"/dashboard\"\n            render={(ac) => <Dashboard {...ac} dc={dc} />}\n          /> */}\n    </MainContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}