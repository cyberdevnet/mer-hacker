{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frollo\\\\Desktop\\\\DevNet\\\\JavaScript\\\\React\\\\py_react\\\\src\\\\components\\\\Tools\\\\FindPorts.js\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"../../styles/FindPorts.css\";\nexport default function NetworkTopUsers(ac) {\n  const [showtable, setshowtable] = useState(false);\n  const [showError, setshowError] = useState(false);\n  console.log(\"NetworkTopUsers -> showError\", showError);\n  const [triggerMAC, settriggerMAC] = useState(0);\n  const [triggerIP, settriggerIP] = useState(0);\n  const [findPort, setfindPort] = useState([]);\n  console.log(\"NetworkTopUsers -> findPort\", findPort);\n  const [findPortTable, setfindPortTable] = useState([]);\n  const [errorMessageMAC, seterrorMessageMAC] = useState(null);\n  const [errorMessageIP, seterrorMessageIP] = useState(null);\n  const [errorMessageMAC_IP, seterrorMessageMAC_IP] = useState(null);\n  const [IPAddress, setIPAddress] = useState(\"\");\n  const [macAddressbeforeTransf, setmacAddressbeforeTransf] = useState(\"\");\n  const [macAddressafterTransf, setmacAddressafterTransf] = useState(\"\");\n  const [switchTimeInterval, setswitchTimeInterval] = useState(15);\n\n  const selectTimeInterval = () => {\n    let selectBox = document.getElementById(\"selectBox-find-port\");\n    let selectedValue = selectBox.options[selectBox.selectedIndex].value;\n\n    if (selectedValue === \"1\") {\n      setswitchTimeInterval(15);\n    } else if (selectedValue === \"2\") {\n      setswitchTimeInterval(30);\n    } else if (selectedValue === \"3\") {\n      setswitchTimeInterval(60);\n    }\n  };\n\n  const isFirstRunMAC = useRef(true);\n  useEffect(() => {\n    if (isFirstRunMAC.current) {\n      isFirstRunMAC.current = false;\n      return;\n    }\n\n    async function APICallMAC() {\n      if (ac.dc.isOrgSelected && ac.dc.isNetSelected === true) {\n        // VALIDATION FORM\n        const transormMacAddress = address => {\n          const a = address.replace(/\\W/g, \"\");\n\n          if (a.length === 12) {\n            seterrorMessageMAC(null);\n            seterrorMessageMAC_IP(null);\n            setmacAddressafterTransf(a.replace(/(.{2})/g, \"$1:\").toUpperCase().slice(0, -1));\n            const macAddress = a.replace(/(.{2})/g, \"$1:\").toUpperCase().slice(0, -1);\n            ac.dc.setloadingButton(true);\n            fetch(\"/find_ports\", {\n              method: [\"POST\"],\n              cache: \"no-cache\",\n              headers: {\n                content_type: \"application/json\"\n              },\n              body: JSON.stringify({\n                \"X-Cisco-Meraki-API-Key\": `${ac.dc.apiKey}`,\n                \"X-CSRFToken\": \"frollo\",\n                ORG_ID: `${ac.dc.organizationID}`,\n                MAC_ADDR: macAddress,\n                IP_ADDR: \"\",\n                TIME_SPAN: switchTimeInterval\n              })\n            }).then(response => response.json()).then(data => setfindPort(data.data)).then(() => setshowtable(true)).then(() => ac.dc.setloadingButton(false)).catch(err => {\n              ac.dc.setalert(true);\n              console.log(\"this is the err: \", err);\n              ac.dc.setloadingButton(false);\n            });\n          } else {\n            seterrorMessageMAC( /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-input-error-msg alert alert-danger\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              className: \"glyphicon glyphicon-exclamation-sign\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }\n            }), \"Please insert a valid MAC Address. Format accepted are: \\\"AA.BB.CC.DD.EE.FF\\\", \\\"112233445566\\\", \\\"AACC.DDEE.BBFF\\\", \\\"AA.BB.CC.DD.EE.FF\\\", \\\"AB12CD34EF56\\\", \\\"ab-12-cd-34-ef-56\\\", \\\"AB-12:CD-34:EF-56\\\", \\\"ab 12 cd 34 ef 56\\\", \\\"AB 12 CD 34 EF 56\\\",\"));\n          }\n        };\n\n        [macAddressbeforeTransf].forEach(transormMacAddress);\n      } else {\n        ac.dc.setswitchAlertModal(true);\n        ac.dc.setAlertModalError(\"Please set Organization and Network.\");\n        ac.dc.setswitchToolsTemplate(false);\n      }\n    }\n\n    APICallMAC();\n    return () => {\n      setfindPort([]);\n      setshowtable(false);\n      setshowError(false);\n      ac.dc.setalert(false);\n    }; // eslint-disable-next-line\n  }, [triggerMAC]);\n  const isFirstRunIP = useRef(true);\n  useEffect(() => {\n    if (isFirstRunIP.current) {\n      isFirstRunIP.current = false;\n      return;\n    }\n\n    async function APICallIP() {\n      if (ac.dc.isOrgSelected && ac.dc.isNetSelected === true) {\n        // VALIDATION FORM\n        const validateIPaddress = address => {\n          const ipformat = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n\n          if (IPAddress.match(ipformat)) {\n            seterrorMessageIP(null);\n            seterrorMessageMAC_IP(null);\n            const validIP = IPAddress;\n            ac.dc.setloadingButton(true);\n            fetch(\"/find_ports\", {\n              method: [\"POST\"],\n              cache: \"no-cache\",\n              headers: {\n                content_type: \"application/json\"\n              },\n              body: JSON.stringify({\n                \"X-Cisco-Meraki-API-Key\": `${ac.dc.apiKey}`,\n                \"X-CSRFToken\": \"frollo\",\n                ORG_ID: `${ac.dc.organizationID}`,\n                MAC_ADDR: \"\",\n                IP_ADDR: validIP,\n                TIME_SPAN: switchTimeInterval\n              })\n            }).then(response => response.json()).then(data => setfindPort(data.data)).then(() => setshowtable(true)).then(() => ac.dc.setloadingButton(false)).catch(err => {\n              ac.dc.setalert(true);\n              console.log(\"this is the err: \", err);\n              ac.dc.setloadingButton(false);\n            });\n          } else {\n            seterrorMessageIP( /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-input-error-msg alert alert-danger\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              className: \"glyphicon glyphicon-exclamation-sign\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }\n            }), \"Please insert a valid IP Address.\"));\n          }\n        };\n\n        [IPAddress].forEach(validateIPaddress);\n      } else {\n        ac.dc.setswitchAlertModal(true);\n        ac.dc.setAlertModalError(\"Please set Organization and Network.\");\n        ac.dc.setswitchToolsTemplate(false);\n      }\n    }\n\n    APICallIP();\n    return () => {\n      setfindPort([]);\n      setshowtable(false);\n      setshowError(false);\n      ac.dc.setalert(false);\n    }; // eslint-disable-next-line\n  }, [triggerIP]);\n  const isFirstRunPort = useRef(true);\n  useEffect(() => {\n    if (isFirstRunPort.current) {\n      isFirstRunPort.current = false;\n      return;\n    }\n\n    if (findPort === null || findPort === undefined) {\n      setshowError(true);\n      setshowtable(false);\n    } else {\n      setfindPortTable(findPort);\n    }\n  }, [findPort]);\n\n  const handleTopUsers = e => {\n    e.preventDefault();\n\n    if (IPAddress !== \"\" && macAddressbeforeTransf === \"\") {\n      settriggerIP(triggerIP + 1);\n      seterrorMessageMAC(false);\n      seterrorMessageIP(false);\n      seterrorMessageMAC_IP(null);\n    } else if (macAddressbeforeTransf !== \"\" && IPAddress === \"\") {\n      settriggerMAC(triggerMAC + 1);\n      seterrorMessageMAC(false);\n      seterrorMessageIP(false);\n      seterrorMessageMAC_IP(null);\n    } else {\n      seterrorMessageMAC(false);\n      seterrorMessageIP(false);\n      seterrorMessageMAC_IP( /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-input-error-msg alert alert-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"glyphicon glyphicon-exclamation-sign\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }\n      }), \"You can perform a search either by MAC Address or IP Address, please insert only one search parameter.\"));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-inner-main-templates\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel panel-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-group\",\n    id: \"accordion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel panel-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"panel-title-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    \"data-toggle\": \"collapse\",\n    \"data-parent\": \"#accordion\",\n    href: \"#collapseOne\",\n    className: \"collapsed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"glyphicon glyphicon-info-sign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"collapseOne\",\n    className: \"panel-collapse collapse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 21\n    }\n  }, \"This script finds all MS switchports that match the input search parameter, searching either by clients MAC address or IP address.\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: selectTimeInterval,\n    id: \"selectBox-find-port\",\n    className: \"btn btn-default dropdown-toggle-tools-findports\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"optgroup\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    className: \"option-tools-disabled\",\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 23\n    }\n  }, \"Select Time Interval\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 23\n    }\n  }, \"15 minutes\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 23\n    }\n  }, \"30 minutes\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 23\n    }\n  }, \"60 minutes\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"MAC Address\",\n    onChange: e => setmacAddressbeforeTransf(e.target.value),\n    name: \"mac-address\",\n    id: \"mac-address\",\n    required: \"required\",\n    \"data-error\": \"Please enter a valid mac-address.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 19\n    }\n  }), errorMessageMAC && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 39\n    }\n  }, errorMessageMAC)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"IP Address\",\n    onChange: e => setIPAddress(e.target.value),\n    name: \"ip-address\",\n    id: \"ip-address\",\n    required: \"required\",\n    \"data-error\": \"Please enter a valid ip-address.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 19\n    }\n  }), errorMessageIP && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 38\n    }\n  }, errorMessageIP)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 17\n    }\n  }, errorMessageMAC_IP && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 42\n    }\n  }, errorMessageMAC_IP))), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"runButton\",\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    onClick: !ac.dc.loadingButton ? handleTopUsers : null,\n    disabled: ac.dc.loadingButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 15\n    }\n  }, ac.dc.loadingButton && /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-refresh fa-spin\",\n    style: {\n      marginRight: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 19\n    }\n  }), ac.dc.loadingButton && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 41\n    }\n  }, \"Loading Data\"), !ac.dc.loadingButton && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 42\n    }\n  }, \"RUN\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel panel-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 11\n    }\n  }, showError ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive table-bordered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-input-error-msg alert alert-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"glyphicon glyphicon-exclamation-sign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 21\n    }\n  }), \"Found 0 total ports matching search criteria. Select another time interval and be sure the client is connected to a wired network.\"))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 15\n    }\n  }), showtable ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive table-bordered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 25\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 25\n    }\n  }, \"Switch\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 25\n    }\n  }, \"Port\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 25\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 25\n    }\n  }, \"IP Address\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 25\n    }\n  }, \"VLAN\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 25\n    }\n  }, \"MAC Address\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 25\n    }\n  }, \"1\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 25\n    }\n  }, findPortTable[0]), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 25\n    }\n  }, findPortTable[1]), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 25\n    }\n  }, findPortTable[2]), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 25\n    }\n  }, findPortTable[3]), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 25\n    }\n  }, findPortTable[4]), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 25\n    }\n  }, findPortTable[5])))))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 15\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/Users/frollo/Desktop/DevNet/JavaScript/React/py_react/src/components/Tools/FindPorts.js"],"names":["React","useEffect","useState","useRef","NetworkTopUsers","ac","showtable","setshowtable","showError","setshowError","console","log","triggerMAC","settriggerMAC","triggerIP","settriggerIP","findPort","setfindPort","findPortTable","setfindPortTable","errorMessageMAC","seterrorMessageMAC","errorMessageIP","seterrorMessageIP","errorMessageMAC_IP","seterrorMessageMAC_IP","IPAddress","setIPAddress","macAddressbeforeTransf","setmacAddressbeforeTransf","macAddressafterTransf","setmacAddressafterTransf","switchTimeInterval","setswitchTimeInterval","selectTimeInterval","selectBox","document","getElementById","selectedValue","options","selectedIndex","value","isFirstRunMAC","current","APICallMAC","dc","isOrgSelected","isNetSelected","transormMacAddress","address","a","replace","length","toUpperCase","slice","macAddress","setloadingButton","fetch","method","cache","headers","content_type","body","JSON","stringify","apiKey","ORG_ID","organizationID","MAC_ADDR","IP_ADDR","TIME_SPAN","then","response","json","data","catch","err","setalert","forEach","setswitchAlertModal","setAlertModalError","setswitchToolsTemplate","isFirstRunIP","APICallIP","validateIPaddress","ipformat","match","validIP","isFirstRunPort","undefined","handleTopUsers","e","preventDefault","target","loadingButton","marginRight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAO,4BAAP;AAEA,eAAe,SAASC,eAAT,CAAyBC,EAAzB,EAA6B;AAC1C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CH,SAA5C;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CK,QAA3C;AACA,QAAM,CAACE,aAAD,EAAgBC,gBAAhB,IAAoCjB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACkB,eAAD,EAAkBC,kBAAlB,IAAwCnB,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAM,CAACoB,cAAD,EAAiBC,iBAAjB,IAAsCrB,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACsB,kBAAD,EAAqBC,qBAArB,IAA8CvB,QAAQ,CAAC,IAAD,CAA5D;AACA,QAAM,CAACwB,SAAD,EAAYC,YAAZ,IAA4BzB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC0B,sBAAD,EAAyBC,yBAAzB,IAAsD3B,QAAQ,CAAC,EAAD,CAApE;AACA,QAAM,CAAC4B,qBAAD,EAAwBC,wBAAxB,IAAoD7B,QAAQ,CAAC,EAAD,CAAlE;AACA,QAAM,CAAC8B,kBAAD,EAAqBC,qBAArB,IAA8C/B,QAAQ,CAAC,EAAD,CAA5D;;AAEA,QAAMgC,kBAAkB,GAAG,MAAM;AAC/B,QAAIC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,CAAhB;AACA,QAAIC,aAAa,GAAGH,SAAS,CAACI,OAAV,CAAkBJ,SAAS,CAACK,aAA5B,EAA2CC,KAA/D;;AACA,QAAIH,aAAa,KAAK,GAAtB,EAA2B;AACzBL,MAAAA,qBAAqB,CAAC,EAAD,CAArB;AACD,KAFD,MAEO,IAAIK,aAAa,KAAK,GAAtB,EAA2B;AAChCL,MAAAA,qBAAqB,CAAC,EAAD,CAArB;AACD,KAFM,MAEA,IAAIK,aAAa,KAAK,GAAtB,EAA2B;AAChCL,MAAAA,qBAAqB,CAAC,EAAD,CAArB;AACD;AACF,GAVD;;AAYA,QAAMS,aAAa,GAAGvC,MAAM,CAAC,IAAD,CAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIyC,aAAa,CAACC,OAAlB,EAA2B;AACzBD,MAAAA,aAAa,CAACC,OAAd,GAAwB,KAAxB;AACA;AACD;;AACD,mBAAeC,UAAf,GAA4B;AAC1B,UAAIvC,EAAE,CAACwC,EAAH,CAAMC,aAAN,IAAuBzC,EAAE,CAACwC,EAAH,CAAME,aAAN,KAAwB,IAAnD,EAAyD;AACvD;AACA,cAAMC,kBAAkB,GAAIC,OAAD,IAAa;AACtC,gBAAMC,CAAC,GAAGD,OAAO,CAACE,OAAR,CAAgB,KAAhB,EAAuB,EAAvB,CAAV;;AACA,cAAID,CAAC,CAACE,MAAF,KAAa,EAAjB,EAAqB;AACnB/B,YAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAI,YAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAM,YAAAA,wBAAwB,CACtBmB,CAAC,CACEC,OADH,CACW,SADX,EACsB,KADtB,EAEGE,WAFH,GAGGC,KAHH,CAGS,CAHT,EAGY,CAAC,CAHb,CADsB,CAAxB;AAMA,kBAAMC,UAAU,GAAGL,CAAC,CACjBC,OADgB,CACR,SADQ,EACG,KADH,EAEhBE,WAFgB,GAGhBC,KAHgB,CAGV,CAHU,EAGP,CAAC,CAHM,CAAnB;AAKAjD,YAAAA,EAAE,CAACwC,EAAH,CAAMW,gBAAN,CAAuB,IAAvB;AAEAC,YAAAA,KAAK,CAAC,aAAD,EAAgB;AACnBC,cAAAA,MAAM,EAAE,CAAC,MAAD,CADW;AAEnBC,cAAAA,KAAK,EAAE,UAFY;AAGnBC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,YAAY,EAAE;AADP,eAHU;AAMnBC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB,0CAA2B,GAAE3D,EAAE,CAACwC,EAAH,CAAMoB,MAAO,EADvB;AAEnB,+BAAe,QAFI;AAGnBC,gBAAAA,MAAM,EAAG,GAAE7D,EAAE,CAACwC,EAAH,CAAMsB,cAAe,EAHb;AAInBC,gBAAAA,QAAQ,EAAEb,UAJS;AAKnBc,gBAAAA,OAAO,EAAE,EALU;AAMnBC,gBAAAA,SAAS,EAAEtC;AANQ,eAAf;AANa,aAAhB,CAAL,CAeGuC,IAfH,CAeSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAftB,EAgBGF,IAhBH,CAgBSG,IAAD,IAAUzD,WAAW,CAACyD,IAAI,CAACA,IAAN,CAhB7B,EAiBGH,IAjBH,CAiBQ,MAAMhE,YAAY,CAAC,IAAD,CAjB1B,EAkBGgE,IAlBH,CAkBQ,MAAMlE,EAAE,CAACwC,EAAH,CAAMW,gBAAN,CAAuB,KAAvB,CAlBd,EAmBGmB,KAnBH,CAmBUC,GAAD,IAAS;AACdvE,cAAAA,EAAE,CAACwC,EAAH,CAAMgC,QAAN,CAAe,IAAf;AACAnE,cAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCiE,GAAjC;AACAvE,cAAAA,EAAE,CAACwC,EAAH,CAAMW,gBAAN,CAAuB,KAAvB;AACD,aAvBH;AAwBD,WAxCD,MAwCO;AACLnC,YAAAA,kBAAkB,eAChB;AAAK,cAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE;AAAM,cAAA,SAAS,EAAC,sCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,8PADgB,CAAlB;AASD;AACF,SArDD;;AAuDA,SAACO,sBAAD,EAAyBkD,OAAzB,CAAiC9B,kBAAjC;AACD,OA1DD,MA0DO;AACL3C,QAAAA,EAAE,CAACwC,EAAH,CAAMkC,mBAAN,CAA0B,IAA1B;AACA1E,QAAAA,EAAE,CAACwC,EAAH,CAAMmC,kBAAN,CAAyB,sCAAzB;AACA3E,QAAAA,EAAE,CAACwC,EAAH,CAAMoC,sBAAN,CAA6B,KAA7B;AACD;AACF;;AACDrC,IAAAA,UAAU;AACV,WAAO,MAAM;AACX3B,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAJ,MAAAA,EAAE,CAACwC,EAAH,CAAMgC,QAAN,CAAe,KAAf;AACD,KALD,CAvEc,CA6Ed;AACD,GA9EQ,EA8EN,CAACjE,UAAD,CA9EM,CAAT;AAgFA,QAAMsE,YAAY,GAAG/E,MAAM,CAAC,IAAD,CAA3B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiF,YAAY,CAACvC,OAAjB,EAA0B;AACxBuC,MAAAA,YAAY,CAACvC,OAAb,GAAuB,KAAvB;AACA;AACD;;AACD,mBAAewC,SAAf,GAA2B;AACzB,UAAI9E,EAAE,CAACwC,EAAH,CAAMC,aAAN,IAAuBzC,EAAE,CAACwC,EAAH,CAAME,aAAN,KAAwB,IAAnD,EAAyD;AACvD;AACA,cAAMqC,iBAAiB,GAAInC,OAAD,IAAa;AACrC,gBAAMoC,QAAQ,GAAG,kKAAjB;;AACA,cAAI3D,SAAS,CAAC4D,KAAV,CAAgBD,QAAhB,CAAJ,EAA+B;AAC7B9D,YAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAE,YAAAA,qBAAqB,CAAC,IAAD,CAArB;AACA,kBAAM8D,OAAO,GAAG7D,SAAhB;AAEArB,YAAAA,EAAE,CAACwC,EAAH,CAAMW,gBAAN,CAAuB,IAAvB;AAEAC,YAAAA,KAAK,CAAC,aAAD,EAAgB;AACnBC,cAAAA,MAAM,EAAE,CAAC,MAAD,CADW;AAEnBC,cAAAA,KAAK,EAAE,UAFY;AAGnBC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,YAAY,EAAE;AADP,eAHU;AAMnBC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB,0CAA2B,GAAE3D,EAAE,CAACwC,EAAH,CAAMoB,MAAO,EADvB;AAEnB,+BAAe,QAFI;AAGnBC,gBAAAA,MAAM,EAAG,GAAE7D,EAAE,CAACwC,EAAH,CAAMsB,cAAe,EAHb;AAInBC,gBAAAA,QAAQ,EAAE,EAJS;AAKnBC,gBAAAA,OAAO,EAAEkB,OALU;AAMnBjB,gBAAAA,SAAS,EAAEtC;AANQ,eAAf;AANa,aAAhB,CAAL,CAeGuC,IAfH,CAeSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAftB,EAgBGF,IAhBH,CAgBSG,IAAD,IAAUzD,WAAW,CAACyD,IAAI,CAACA,IAAN,CAhB7B,EAkBGH,IAlBH,CAkBQ,MAAMhE,YAAY,CAAC,IAAD,CAlB1B,EAmBGgE,IAnBH,CAmBQ,MAAMlE,EAAE,CAACwC,EAAH,CAAMW,gBAAN,CAAuB,KAAvB,CAnBd,EAoBGmB,KApBH,CAoBUC,GAAD,IAAS;AACdvE,cAAAA,EAAE,CAACwC,EAAH,CAAMgC,QAAN,CAAe,IAAf;AACAnE,cAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCiE,GAAjC;AACAvE,cAAAA,EAAE,CAACwC,EAAH,CAAMW,gBAAN,CAAuB,KAAvB;AACD,aAxBH;AAyBD,WAhCD,MAgCO;AACLjC,YAAAA,iBAAiB,eACf;AAAK,cAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE;AAAM,cAAA,SAAS,EAAC,sCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,sCADe,CAAjB;AAMD;AACF,SA1CD;;AA4CA,SAACG,SAAD,EAAYoD,OAAZ,CAAoBM,iBAApB;AACD,OA/CD,MA+CO;AACL/E,QAAAA,EAAE,CAACwC,EAAH,CAAMkC,mBAAN,CAA0B,IAA1B;AACA1E,QAAAA,EAAE,CAACwC,EAAH,CAAMmC,kBAAN,CAAyB,sCAAzB;AACA3E,QAAAA,EAAE,CAACwC,EAAH,CAAMoC,sBAAN,CAA6B,KAA7B;AACD;AACF;;AACDE,IAAAA,SAAS;AACT,WAAO,MAAM;AACXlE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAJ,MAAAA,EAAE,CAACwC,EAAH,CAAMgC,QAAN,CAAe,KAAf;AACD,KALD,CA5Dc,CAkEd;AACD,GAnEQ,EAmEN,CAAC/D,SAAD,CAnEM,CAAT;AAqEA,QAAM0E,cAAc,GAAGrF,MAAM,CAAC,IAAD,CAA7B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIuF,cAAc,CAAC7C,OAAnB,EAA4B;AAC1B6C,MAAAA,cAAc,CAAC7C,OAAf,GAAyB,KAAzB;AACA;AACD;;AACD,QAAI3B,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAKyE,SAAtC,EAAiD;AAC/ChF,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAF,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAHD,MAGO;AACLY,MAAAA,gBAAgB,CAACH,QAAD,CAAhB;AACD;AACF,GAXQ,EAWN,CAACA,QAAD,CAXM,CAAT;;AAaA,QAAM0E,cAAc,GAAIC,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIlE,SAAS,KAAK,EAAd,IAAoBE,sBAAsB,KAAK,EAAnD,EAAuD;AACrDb,MAAAA,YAAY,CAACD,SAAS,GAAG,CAAb,CAAZ;AACAO,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAE,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAE,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,KALD,MAKO,IAAIG,sBAAsB,KAAK,EAA3B,IAAiCF,SAAS,KAAK,EAAnD,EAAuD;AAC5Db,MAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACAS,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAE,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAE,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,KALM,MAKA;AACLJ,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAE,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAE,MAAAA,qBAAqB,eACnB;AAAK,QAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAC,sCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,2GADmB,CAArB;AAOD;AACF,GAvBD;;AAyBA,sBACE;AAAK,IAAA,EAAE,EAAC,2BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,EAAE,EAAC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,mBAAY,UADd;AAEE,mBAAY,YAFd;AAGE,IAAA,IAAI,EAAC,cAHP;AAIE,IAAA,SAAS,EAAC,WAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAM,IAAA,SAAS,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,CADF,CADF,eAcE;AAAK,IAAA,EAAE,EAAC,aAAR;AAAsB,IAAA,SAAS,EAAC,yBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0IADF,CAdF,CADF,CADF,eAyBE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,CADF,eA4BE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,QAAQ,EAAES,kBADZ;AAEE,IAAA,EAAE,EAAC,qBAFL;AAGE,IAAA,SAAS,EAAC,iDAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,uBAAlB;AAA0C,IAAA,KAAK,EAAC,GAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAIE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,CALF,CADF,CADF,eAkBE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,WAAW,EAAC,aAHd;AAIE,IAAA,QAAQ,EAAGyD,CAAD,IAAO9D,yBAAyB,CAAC8D,CAAC,CAACE,MAAF,CAASpD,KAAV,CAJ5C;AAKE,IAAA,IAAI,EAAC,aALP;AAME,IAAA,EAAE,EAAC,aANL;AAOE,IAAA,QAAQ,EAAC,UAPX;AAQE,kBAAW,mCARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAYGrB,eAAe,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,eAAP,CAZtB,CAlBF,eAgCE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,WAAW,EAAC,YAHd;AAIE,IAAA,QAAQ,EAAGuE,CAAD,IAAOhE,YAAY,CAACgE,CAAC,CAACE,MAAF,CAASpD,KAAV,CAJ/B;AAKE,IAAA,IAAI,EAAC,YALP;AAME,IAAA,EAAE,EAAC,YANL;AAOE,IAAA,QAAQ,EAAC,UAPX;AAQE,kBAAW,kCARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAYGnB,cAAc,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,cAAP,CAZrB,CAhCF,eA+CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,kBAAkB,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,kBAAP,CADzB,CA/CF,CADF,eAqDE;AACE,IAAA,EAAE,EAAC,WADL;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,SAAS,EAAC,iBAHZ;AAIE,IAAA,OAAO,EAAE,CAACnB,EAAE,CAACwC,EAAH,CAAMiD,aAAP,GAAuBJ,cAAvB,GAAwC,IAJnD;AAKE,IAAA,QAAQ,EAAErF,EAAE,CAACwC,EAAH,CAAMiD,aALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGzF,EAAE,CAACwC,EAAH,CAAMiD,aAAN,iBACC;AACE,IAAA,SAAS,EAAC,uBADZ;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EAaG1F,EAAE,CAACwC,EAAH,CAAMiD,aAAN,iBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAb1B,EAcG,CAACzF,EAAE,CAACwC,EAAH,CAAMiD,aAAP,iBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAd3B,CArDF,CA5BF,CADF,CADF,CADF,eAwGE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtF,SAAS,gBACR;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,sCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,uIADF,CADF,CADQ,gBAYR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,EAgBGF,SAAS,gBACR;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,CADF,CADF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKY,aAAa,CAAC,CAAD,CAAlB,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,aAAa,CAAC,CAAD,CAAlB,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,aAAa,CAAC,CAAD,CAAlB,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,aAAa,CAAC,CAAD,CAAlB,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,aAAa,CAAC,CAAD,CAAlB,CAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,aAAa,CAAC,CAAD,CAAlB,CARF,CADF,CAZF,CADF,CADF,CADQ,gBA+BR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/CJ,CADF,CADF,CAxGF,CADF;AAiKD","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"../../styles/FindPorts.css\";\r\n\r\nexport default function NetworkTopUsers(ac) {\r\n  const [showtable, setshowtable] = useState(false);\r\n  const [showError, setshowError] = useState(false);\r\n  console.log(\"NetworkTopUsers -> showError\", showError);\r\n  const [triggerMAC, settriggerMAC] = useState(0);\r\n  const [triggerIP, settriggerIP] = useState(0);\r\n  const [findPort, setfindPort] = useState([]);\r\n  console.log(\"NetworkTopUsers -> findPort\", findPort);\r\n  const [findPortTable, setfindPortTable] = useState([]);\r\n  const [errorMessageMAC, seterrorMessageMAC] = useState(null);\r\n  const [errorMessageIP, seterrorMessageIP] = useState(null);\r\n  const [errorMessageMAC_IP, seterrorMessageMAC_IP] = useState(null);\r\n  const [IPAddress, setIPAddress] = useState(\"\");\r\n  const [macAddressbeforeTransf, setmacAddressbeforeTransf] = useState(\"\");\r\n  const [macAddressafterTransf, setmacAddressafterTransf] = useState(\"\");\r\n  const [switchTimeInterval, setswitchTimeInterval] = useState(15);\r\n\r\n  const selectTimeInterval = () => {\r\n    let selectBox = document.getElementById(\"selectBox-find-port\");\r\n    let selectedValue = selectBox.options[selectBox.selectedIndex].value;\r\n    if (selectedValue === \"1\") {\r\n      setswitchTimeInterval(15);\r\n    } else if (selectedValue === \"2\") {\r\n      setswitchTimeInterval(30);\r\n    } else if (selectedValue === \"3\") {\r\n      setswitchTimeInterval(60);\r\n    }\r\n  };\r\n\r\n  const isFirstRunMAC = useRef(true);\r\n  useEffect(() => {\r\n    if (isFirstRunMAC.current) {\r\n      isFirstRunMAC.current = false;\r\n      return;\r\n    }\r\n    async function APICallMAC() {\r\n      if (ac.dc.isOrgSelected && ac.dc.isNetSelected === true) {\r\n        // VALIDATION FORM\r\n        const transormMacAddress = (address) => {\r\n          const a = address.replace(/\\W/g, \"\");\r\n          if (a.length === 12) {\r\n            seterrorMessageMAC(null);\r\n            seterrorMessageMAC_IP(null);\r\n            setmacAddressafterTransf(\r\n              a\r\n                .replace(/(.{2})/g, \"$1:\")\r\n                .toUpperCase()\r\n                .slice(0, -1)\r\n            );\r\n            const macAddress = a\r\n              .replace(/(.{2})/g, \"$1:\")\r\n              .toUpperCase()\r\n              .slice(0, -1);\r\n\r\n            ac.dc.setloadingButton(true);\r\n\r\n            fetch(\"/find_ports\", {\r\n              method: [\"POST\"],\r\n              cache: \"no-cache\",\r\n              headers: {\r\n                content_type: \"application/json\",\r\n              },\r\n              body: JSON.stringify({\r\n                \"X-Cisco-Meraki-API-Key\": `${ac.dc.apiKey}`,\r\n                \"X-CSRFToken\": \"frollo\",\r\n                ORG_ID: `${ac.dc.organizationID}`,\r\n                MAC_ADDR: macAddress,\r\n                IP_ADDR: \"\",\r\n                TIME_SPAN: switchTimeInterval,\r\n              }),\r\n            })\r\n              .then((response) => response.json())\r\n              .then((data) => setfindPort(data.data))\r\n              .then(() => setshowtable(true))\r\n              .then(() => ac.dc.setloadingButton(false))\r\n              .catch((err) => {\r\n                ac.dc.setalert(true);\r\n                console.log(\"this is the err: \", err);\r\n                ac.dc.setloadingButton(false);\r\n              });\r\n          } else {\r\n            seterrorMessageMAC(\r\n              <div className=\"form-input-error-msg alert alert-danger\">\r\n                <span className=\"glyphicon glyphicon-exclamation-sign\"></span>\r\n                Please insert a valid MAC Address. Format accepted are:\r\n                \"AA.BB.CC.DD.EE.FF\", \"112233445566\", \"AACC.DDEE.BBFF\",\r\n                \"AA.BB.CC.DD.EE.FF\", \"AB12CD34EF56\", \"ab-12-cd-34-ef-56\",\r\n                \"AB-12:CD-34:EF-56\", \"ab 12 cd 34 ef 56\", \"AB 12 CD 34 EF 56\",\r\n              </div>\r\n            );\r\n          }\r\n        };\r\n\r\n        [macAddressbeforeTransf].forEach(transormMacAddress);\r\n      } else {\r\n        ac.dc.setswitchAlertModal(true);\r\n        ac.dc.setAlertModalError(\"Please set Organization and Network.\");\r\n        ac.dc.setswitchToolsTemplate(false);\r\n      }\r\n    }\r\n    APICallMAC();\r\n    return () => {\r\n      setfindPort([]);\r\n      setshowtable(false);\r\n      setshowError(false);\r\n      ac.dc.setalert(false);\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [triggerMAC]);\r\n\r\n  const isFirstRunIP = useRef(true);\r\n  useEffect(() => {\r\n    if (isFirstRunIP.current) {\r\n      isFirstRunIP.current = false;\r\n      return;\r\n    }\r\n    async function APICallIP() {\r\n      if (ac.dc.isOrgSelected && ac.dc.isNetSelected === true) {\r\n        // VALIDATION FORM\r\n        const validateIPaddress = (address) => {\r\n          const ipformat = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\r\n          if (IPAddress.match(ipformat)) {\r\n            seterrorMessageIP(null);\r\n            seterrorMessageMAC_IP(null);\r\n            const validIP = IPAddress;\r\n\r\n            ac.dc.setloadingButton(true);\r\n\r\n            fetch(\"/find_ports\", {\r\n              method: [\"POST\"],\r\n              cache: \"no-cache\",\r\n              headers: {\r\n                content_type: \"application/json\",\r\n              },\r\n              body: JSON.stringify({\r\n                \"X-Cisco-Meraki-API-Key\": `${ac.dc.apiKey}`,\r\n                \"X-CSRFToken\": \"frollo\",\r\n                ORG_ID: `${ac.dc.organizationID}`,\r\n                MAC_ADDR: \"\",\r\n                IP_ADDR: validIP,\r\n                TIME_SPAN: switchTimeInterval,\r\n              }),\r\n            })\r\n              .then((response) => response.json())\r\n              .then((data) => setfindPort(data.data))\r\n\r\n              .then(() => setshowtable(true))\r\n              .then(() => ac.dc.setloadingButton(false))\r\n              .catch((err) => {\r\n                ac.dc.setalert(true);\r\n                console.log(\"this is the err: \", err);\r\n                ac.dc.setloadingButton(false);\r\n              });\r\n          } else {\r\n            seterrorMessageIP(\r\n              <div className=\"form-input-error-msg alert alert-danger\">\r\n                <span className=\"glyphicon glyphicon-exclamation-sign\"></span>\r\n                Please insert a valid IP Address.\r\n              </div>\r\n            );\r\n          }\r\n        };\r\n\r\n        [IPAddress].forEach(validateIPaddress);\r\n      } else {\r\n        ac.dc.setswitchAlertModal(true);\r\n        ac.dc.setAlertModalError(\"Please set Organization and Network.\");\r\n        ac.dc.setswitchToolsTemplate(false);\r\n      }\r\n    }\r\n    APICallIP();\r\n    return () => {\r\n      setfindPort([]);\r\n      setshowtable(false);\r\n      setshowError(false);\r\n      ac.dc.setalert(false);\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [triggerIP]);\r\n\r\n  const isFirstRunPort = useRef(true);\r\n\r\n  useEffect(() => {\r\n    if (isFirstRunPort.current) {\r\n      isFirstRunPort.current = false;\r\n      return;\r\n    }\r\n    if (findPort === null || findPort === undefined) {\r\n      setshowError(true);\r\n      setshowtable(false);\r\n    } else {\r\n      setfindPortTable(findPort);\r\n    }\r\n  }, [findPort]);\r\n\r\n  const handleTopUsers = (e) => {\r\n    e.preventDefault();\r\n    if (IPAddress !== \"\" && macAddressbeforeTransf === \"\") {\r\n      settriggerIP(triggerIP + 1);\r\n      seterrorMessageMAC(false);\r\n      seterrorMessageIP(false);\r\n      seterrorMessageMAC_IP(null);\r\n    } else if (macAddressbeforeTransf !== \"\" && IPAddress === \"\") {\r\n      settriggerMAC(triggerMAC + 1);\r\n      seterrorMessageMAC(false);\r\n      seterrorMessageIP(false);\r\n      seterrorMessageMAC_IP(null);\r\n    } else {\r\n      seterrorMessageMAC(false);\r\n      seterrorMessageIP(false);\r\n      seterrorMessageMAC_IP(\r\n        <div className=\"form-input-error-msg alert alert-danger\">\r\n          <span className=\"glyphicon glyphicon-exclamation-sign\"></span>\r\n          You can perform a search either by MAC Address or IP Address, please\r\n          insert only one search parameter.\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"page-inner-main-templates\">\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-12\">\r\n          <div className=\"panel panel-default\">\r\n            <div className=\"panel-body\">\r\n              <div className=\"panel-group\" id=\"accordion\">\r\n                <div className=\"panel panel-default\">\r\n                  <div className=\"panel-heading\">\r\n                    <h4 className=\"panel-title-description\">\r\n                      <a\r\n                        data-toggle=\"collapse\"\r\n                        data-parent=\"#accordion\"\r\n                        href=\"#collapseOne\"\r\n                        className=\"collapsed\"\r\n                      >\r\n                        <span className=\"glyphicon glyphicon-info-sign\"></span>\r\n                        {/* Description */}\r\n                      </a>\r\n                    </h4>\r\n                  </div>\r\n                  <div id=\"collapseOne\" className=\"panel-collapse collapse\">\r\n                    <div className=\"panel-body\">\r\n                      This script finds all MS switchports that match the input\r\n                      search parameter, searching either by clients MAC address\r\n                      or IP address.\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex\"></div>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n              <form className=\"form-inline\">\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    onChange={selectTimeInterval}\r\n                    id=\"selectBox-find-port\"\r\n                    className=\"btn btn-default dropdown-toggle-tools-findports\"\r\n                  >\r\n                    <optgroup>\r\n                      <option className=\"option-tools-disabled\" value=\"0\">\r\n                        Select Time Interval\r\n                      </option>\r\n                      <option value=\"1\">15 minutes</option>\r\n                      <option value=\"2\">30 minutes</option>\r\n                      <option value=\"3\">60 minutes</option>\r\n                    </optgroup>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"MAC Address\"\r\n                    onChange={(e) => setmacAddressbeforeTransf(e.target.value)}\r\n                    name=\"mac-address\"\r\n                    id=\"mac-address\"\r\n                    required=\"required\"\r\n                    data-error=\"Please enter a valid mac-address.\"\r\n                  />\r\n\r\n                  {errorMessageMAC && <span>{errorMessageMAC}</span>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"IP Address\"\r\n                    onChange={(e) => setIPAddress(e.target.value)}\r\n                    name=\"ip-address\"\r\n                    id=\"ip-address\"\r\n                    required=\"required\"\r\n                    data-error=\"Please enter a valid ip-address.\"\r\n                  />\r\n\r\n                  {errorMessageIP && <span>{errorMessageIP}</span>}\r\n                </div>\r\n\r\n                <div>\r\n                  {errorMessageMAC_IP && <span>{errorMessageMAC_IP}</span>}\r\n                </div>\r\n              </form>\r\n\r\n              <button\r\n                id=\"runButton\"\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\"\r\n                onClick={!ac.dc.loadingButton ? handleTopUsers : null}\r\n                disabled={ac.dc.loadingButton}\r\n              >\r\n                {ac.dc.loadingButton && (\r\n                  <i\r\n                    className=\"fa fa-refresh fa-spin\"\r\n                    style={{ marginRight: \"5px\" }}\r\n                  />\r\n                )}\r\n                {ac.dc.loadingButton && <span>Loading Data</span>}\r\n                {!ac.dc.loadingButton && <span>RUN</span>}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-12\">\r\n          <div className=\"panel panel-default\">\r\n            {showError ? (\r\n              <div className=\"panel-body\">\r\n                <div className=\"table-responsive table-bordered\">\r\n                  <div className=\"form-input-error-msg alert alert-danger\">\r\n                    <span className=\"glyphicon glyphicon-exclamation-sign\"></span>\r\n                    Found 0 total ports matching search criteria. Select another\r\n                    time interval and be sure the client is connected to a wired\r\n                    network.\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n\r\n            {showtable ? (\r\n              <div className=\"panel-body\">\r\n                <div className=\"table-responsive table-bordered\">\r\n                  <table className=\"table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>#</th>\r\n                        <th>Switch</th>\r\n                        <th>Port</th>\r\n                        <th>Description</th>\r\n                        <th>IP Address</th>\r\n                        <th>VLAN</th>\r\n                        <th>MAC Address</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>1</td>\r\n\r\n                        <td>{findPortTable[0]}</td>\r\n                        <td>{findPortTable[1]}</td>\r\n                        <td>{findPortTable[2]}</td>\r\n                        <td>{findPortTable[3]}</td>\r\n                        <td>{findPortTable[4]}</td>\r\n                        <td>{findPortTable[5]}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}