{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frollo\\\\Desktop\\\\DevNet\\\\JavaScript\\\\React\\\\py_react\\\\src\\\\components\\\\LiveLog.js\";\nimport React, { useEffect, useState, useRef } from \"react\";\nexport default function LiveLog() {\n  const [trigger, settrigger] = useState(0);\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n\n    async function APICallLog() {\n      try {\n        fetch(\"../../api/debug.log\").then(response => {\n          return response.text;\n        }).then(data => {\n          console.log(data);\n        });\n      } catch (err) {\n        if (err) {\n          console.log(err);\n        }\n      }\n    }\n\n    APICallLog();\n  }, [trigger]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => settrigger(trigger + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Log\"));\n}","map":{"version":3,"sources":["C:/Users/frollo/Desktop/DevNet/JavaScript/React/py_react/src/components/LiveLog.js"],"names":["React","useEffect","useState","useRef","LiveLog","trigger","settrigger","isFirstRun","current","APICallLog","fetch","then","response","text","data","console","log","err"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAMK,UAAU,GAAGJ,MAAM,CAAC,IAAD,CAAzB;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,UAAU,CAACC,OAAf,EAAwB;AACtBD,MAAAA,UAAU,CAACC,OAAX,GAAqB,KAArB;AACA;AACD;;AACD,mBAAeC,UAAf,GAA4B;AAC1B,UAAI;AACFC,QAAAA,KAAK,CAAC,qBAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;AAClB,iBAAOA,QAAQ,CAACC,IAAhB;AACD,SAHH,EAIGF,IAJH,CAISG,IAAD,IAAU;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,SANH;AAOD,OARD,CAQE,OAAOG,GAAP,EAAY;AACZ,YAAIA,GAAJ,EAAS;AACPF,UAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;AACF;;AACDR,IAAAA,UAAU;AACX,GArBQ,EAqBN,CAACJ,OAAD,CArBM,CAAT;AAuBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAE,MAAMC,UAAU,CAACD,OAAO,GAAG,CAAX,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CADF;AAKD","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nexport default function LiveLog() {\r\n  const [trigger, settrigger] = useState(0);\r\n  const isFirstRun = useRef(true);\r\n  useEffect(() => {\r\n    if (isFirstRun.current) {\r\n      isFirstRun.current = false;\r\n      return;\r\n    }\r\n    async function APICallLog() {\r\n      try {\r\n        fetch(\"../../api/debug.log\")\r\n          .then((response) => {\r\n            return response.text;\r\n          })\r\n          .then((data) => {\r\n            console.log(data);\r\n          });\r\n      } catch (err) {\r\n        if (err) {\r\n          console.log(err);\r\n        }\r\n      }\r\n    }\r\n    APICallLog();\r\n  }, [trigger]);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => settrigger(trigger + 1)}>Log</button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}